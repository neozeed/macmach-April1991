/* 
 * Mach Operating System
 * Copyright (c) 1989 Carnegie-Mellon University
 * All rights reserved.  The CMU software License Agreement specifies
 * the terms and conditions for use and redistribution.
 */
/*
 * HISTORY
 * $Log:	env_mgr.defs,v $
 * Revision 1.1  90/02/19  21:47:15  bww
 * 	Mach Release 2.5
 * 	[90/02/19  21:47:02  bww]
 * 
 * Revision 1.2  89/05/05  18:30:37  mrt
 * 	  21-Aug-87  Mary Thompson
 * 
 *	Used new method of specifying dealloc for parameters
 *
 *   30-Jul-87  Mary Thompson
 *	Removed dealloc from definition of port_val_array
 *	in env_list_ports as it was causing the ports to be
 *	deallocated.
 *
 *   27-May-87  Mary Thompson
 *	Converted to new mig format
 *
 *   13-Aug-86	Mary Thompson
 *	started.
 *
/*
 *
 *   Definition file for the Mach Environment Manager
 *
 *   Mary R. Thompson
 */

subsystem env_mgr   1600;
#include <mach/std_types.defs>

type env_name_t 	= (MSG_TYPE_STRING,640);
type env_str_val_t 	= (MSG_TYPE_STRING,2048);
type env_name_list 	= ^array [ ] of (MSG_TYPE_STRING,640);
type env_str_list	= ^array [ ] of (MSG_TYPE_STRING,2048);


import <servers/emdefs.h>;

routine env_set_string(	port		: port_t;
   			env_name	: env_name_t;
    		        env_val		: env_str_val_t);


routine env_get_string(	port		: port_t;
   			env_name	: env_name_t;
    		    out env_val		: env_str_val_t);


routine env_del_string(	port		: port_t;
   			env_name	: env_name_t);

routine env_set_port(	port		: port_t;
   			env_name	: env_name_t;
    		        env_val		: port_t);


routine env_get_port(	port		: port_t;
   			env_name	: env_name_t;
    		    out env_val		: port_t);


routine env_del_port(	port		: port_t;
   			env_name	: env_name_t);

routine env_list_strings(port		: port_t;
		    out env_names	: env_name_list,dealloc;
    		    out env_string_vals	: env_str_list ,dealloc);

routine env_list_ports(	port		: port_t;
		    out env_names	: env_name_list,dealloc;
    		    out env_ports_vals	: port_array_t);

routine env_set_stlist(	port		: port_t;
		        env_names	: env_name_list;
    		        env_string_vals	: env_str_list);

routine env_set_ptlist(	port		: port_t;
		        env_names	: env_name_list;
    		        env_ports_vals	: port_array_t);


routine env_copy_conn(	port		: port_t;
    		     out new_env_port	: port_t = MSG_TYPE_PORT_OWNERSHIP);


routine env_new_conn(	port		: port_t;
    		     out new_env_port	: port_t = MSG_TYPE_PORT_OWNERSHIP);

routine env_restrict_conn(port		: port_t;
    		     out new_env_port	: port_t = MSG_TYPE_PORT_OWNERSHIP);

routine env_disconnect(	port		: port_t);
