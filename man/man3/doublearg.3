.\"
.\" $Id: doublearg.3,v 1.3 89/12/26 11:16:09 bww Exp $
.\"
.\" HISTORY
.\" $Log:	doublearg.3,v $
.\" Revision 1.3  89/12/26  11:16:09  bww
.\" 	Revised for 2.6 MSD release.
.\" 	[89/12/25            bww]
.\" 
.\" 13-Nov-86  Andi Swimmer (andi) at Carnegie-Mellon University
.\"	Revised for 4.3.
.\"
.\" 05-Dec-79  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Created.
.\"
.TH DOUBLEARG 3 12/5/79
.CM 1
.SH "NAME"
doublearg, floatarg \- parse floating-point value or ask user
.SH "SYNOPSIS"
.B
#include <ctype.h>
.sp
.B
double doublearg (ptr,brk,prompt,min,max,defalt);
.br
.B
char **ptr,*brk,*prompt;
.br
.B
double min,max,defalt;
.sp
.B
float floatarg (ptr,brk,prompt,min,max,defalt);
.br
.B
char **ptr,*brk,*prompt;
.br
.B
float min,max,defalt;
.SH "DESCRIPTION"
.I
Doublearg
and
.I
floatarg
attempt to parse an argument from a string, passing the string pointer
.I
ptr
and the break character seg
.I
brk
to the
.IR nxtarg (3)
routine.
If there is an argument parsed, and it is a legal floating-point
value between
.I
min
and
.I
max,
then it is returned by
.I
doublearg
or
.I
floatarg.
If there is no argument, or if it is not a valid floating-point number,
or if it is out of range, then an error message is printed and
the routine
.IR getdouble (3)
or
.IR getfloat (3)
is passed the remaining parameters; the value returned by
.I
getdouble
or
.I
getfloat
is then returned by
.I
doublearg
or
.I
floatarg.
.sp
.I
Doublearg
and
.I
floatarg
are epxecially useful for parsing floating-point values from
argument lists in programs using the command interpreter,
.IR ci (3).
.SH "SEE ALSO"
.IR nxtarg (3), 
.IR getdouble (3), 
.IR getfloat (3), 
.IR ci (3)
