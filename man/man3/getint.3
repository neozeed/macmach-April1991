.\"
.\" $Id: getint.3,v 1.3 89/12/26 11:17:53 bww Exp $
.\"
.\" HISTORY
.\" $Log:	getint.3,v $
.\" Revision 1.3  89/12/26  11:17:53  bww
.\" 	Revised for 2.6 MSD release.
.\" 	[89/12/25            bww]
.\" 
.\" 13-Nov-86  Andi Swimmer (andi) at Carnegie-Mellon University
.\"	Revised for 4.3.
.\"
.\" 23-Oct-82  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Error or EOF on standard input now causes default value to be used.
.\"
.\" 05-Dec-79  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Created.
.\"
.TH GETINT 3 10/23/82
.CM 3
.SH "NAME"
getint, getlong, getshort \- ask user to type an integer value
.SH "SYNOPSIS"
.B
#include <stdio.h>
.br
.B
#include <ctype.h>
.sp
.nf
.B
int getint (prompt,min,max,defalt);
.B
char *prompt;
.B
int min,max,defalt;
.sp
.B
long getlong (prompt,min,max,defalt);
.B
char *prompt;
.B
long min,max,defalt;
.sp
.B
short getshort (prompt,min,max,defalt);
.B
char *prompt;
.B
short min,max,defalt;
.fi
.SH "DESCRIPTION"
.I
Getint,
.I
getlong,
and
.I
getshort
ask the user to type in an integer.
.sp
They begin by printing the string
.I
prompt
as a message to the user.
The user then types in a number.
If the number is valid and is within the range
.I
min
to
.I
max,
then it is returned as the value of
.IR "getint (getlong, getshort)" .
If it is invalid or is out of range, then an error message
is printed and the prompt-and-response cycle is repeated.
If the user types just a carriage return, then the value
.I
defalt
is assumed.
.sp
.I
Getint, getlong,
and
.I
getshort
are identical, except for the type of the parameters and the results.
.SH "SEE ALSO"
.IR getbool (3), 
.IR getstr (3), 
.IR gethex (3), 
.IR getstab (3), 
.IR getdouble (3), 
etc.
.br
.IR intarg (3), 
.IR longarg (3), 
.IR shortarg (3)
