.\"
.\" $Id: getdouble.3,v 1.3 89/12/26 11:17:44 bww Exp $
.\"
.\" HISTORY
.\" $Log:	getdouble.3,v $
.\" Revision 1.3  89/12/26  11:17:44  bww
.\" 	Revised for 2.6 MSD release.
.\" 	[89/12/25            bww]
.\" 
.\" 13-Nov-86  Andi Swimmer (andi) at Carnegie-Mellon University
.\"	Revised for 4.3.
.\"
.\" 23-Oct-82  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Error or EOF on standard input now causes default value to be used.
.\"
.\" 05-Dec-79  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Created.
.\"
.TH GETDOUBLE 3 10/23/82
.CM 3
.SH "NAME"
getdouble, getfloat \- ask user to type floating-point value
.SH "SYNOPSIS"
.B
#include <ctype.h>
.br
.B
#include <math.h>
.br
.B
#include <stdio.h>
.sp
.B
double getdouble (prompt,min,max,defalt);
.br
.B
char *prompt;
.br
.B
double min,max,defalt;
.sp
.B
float getfloat (prompt,min,max,defalt);
.br
.B
char *prompt;
.br
.B
float min,max,defalt;
.SH "DESCRIPTION"
.I
Getdouble
and
.I
getfloat
ask the user to type a floating-point number.
They begin
by printing the string
.I
prompt
as a message to the user.
The user then types in a floating-point
number which is parsed.
If the number is valid and is within
the range
.I
min
to
.I
max,
inclusive, then the value is returned as the value of
.I
getdouble
or
.I
getfloat.
If the value is invalid or out of range, then an error message is
printed and the cycle is repeated.
If the user types just a carriage
return, then the value
.I
defalt
is returned.
.sp
.I
Getdouble
and
.I
getfloat
are identical, except for the type of the parameters and the results.
.SH "SEE ALSO"
.IR getint (3), 
.IR getbool (3), 
etc.
.br
.IR doublearg( 3), 
.IR floatarg (3)
