.\"
.\" $Id: quit.3,v 1.3 89/12/26 11:21:15 bww Exp $
.\"
.\" HISTORY
.\" $Log:	quit.3,v $
.\" Revision 1.3  89/12/26  11:21:15  bww
.\" 	Revised for 2.6 MSD release.
.\" 	[89/12/25            bww]
.\" 
.\" 13-Nov-86  Andi Swimmer (andi) at Carnegie-Mellon University
.\"	Revised for 4.3.
.\"
.\" 20-Mar-81  Dale Moore (dwm) at Carnegie-Mellon University
.\"	Changed to call _doprnt instead of fprintf.
.\"
.\" 06-Dec-79  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Created.
.\"
.TH QUIT 3 3/20/81
.CM 2
.SH "NAME"
quit \- print message and exit
.SH "SYNOPSIS"
.B
quit (status, format
[, arg ] ...
.B
)
.br
.B
int status;
.br
.B
char *format;
.SH "DESCRIPTION"
.I
quit
is a means of terminating a process with an error message.
.sp
This call should never return.
.sp
.I
quit
prints on standard error the message specified by the
.IR printf (3)
argument list
.I
format [, arg]...
then exits.
.sp
The first argument,
.IR status ,
will be the argument passed to
.IR exit (2)
and this is the process's return code.
All of the process's files will be closed.
.SH "SEE ALSO"
.IR printf (3), 
.IR exit (2), 
.IR wait (2)
.SH "BUGS"
The implementation of
.I
quit
depends on a routine named
.IR _doprnt .
Although 
.I
fprintf
and
.I
printf
on Vax and PDP11 
UNIX are implemented with this routine,
other UNIX systems might not implement them this way.
