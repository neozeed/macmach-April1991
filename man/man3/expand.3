.\"
.\" $Id: expand.3,v 1.3 89/12/26 11:16:29 bww Exp $
.\"
.\" HISTORY
.\" $Log:	expand.3,v $
.\" Revision 1.3  89/12/26  11:16:29  bww
.\" 	Revised for 2.6 MSD release.
.\" 	[89/12/25            bww]
.\" 
.\" 13-Nov-86  Andi Swimmer (andi) at Carnegie-Mellon University
.\"	Revised for 4.3.
.\"
.\" 08-May-85  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Added handling of ~ and {aaa,bbb}.
.\"
.\" 05-Dec-79  Steven Shafer (sas) at Carnegie-Mellon University
.\"	Created.
.\"
.TH EXPAND 3 5/8/85
.CM 4
.SH "NAME"
expand \- expand filename specification
.SH "SYNOPSIS"
.B
int expand (spec,buffer,bufsize);
.br
.B
char *spec,**buffer;
.br
.B
int bufsize;
.SH "DESCRIPTION"
.I
Expand
takes a file specification, and expands it into a set of
filenames by resolving the characters '*', '?', '[', '{', and '~'
in the same way as the shell does.
.sp
You must provide
.I
buffer,
an array of string pointers (\fIchar *\fR), and you tell how
big this array is in
.I
bufsize.
.I
Expand
will compute the corresponding filenames, and fill up
the entries of
.I
buffer,
putting ponters to
.IR malloc 'd
strings into the slots.
.sp
The value returned by
.I
expand
is the number of filenames found.
If any error occurs,
the value returned will be \-1.
In such a case, not all
of the files were discoverable.
If too many files are
found, then the value returned will be
.I
bufsize
+ 1; you should try again with a bigger buffer.
.SH "SEE ALSO"
.IR sh (1), 
.IR getwd (3), 
.IR malloc (3), 
.IR path (3)
.SH "DIAGNOSTICS"
Returns \-1 on error;
.I
bufsize
+ 1 if too many files are found.
.SH "BUGS"
Error recovery is too drastic; it should continue to find
all the names that can be found.
Also, if an error
occurs, the strings 
.IR malloc 'd 
so far will never be garbage-collected.
.sp
Within braces {...}, the substrings may contain other meta-characters
but may not contain slashes / or additional braces {}.
