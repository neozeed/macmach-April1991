


     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



     NNNNAAAAMMMMEEEE
          XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn ---- tttthhhheeee TTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn wwwwiiiiddddggggeeeetttt ccccllllaaaassssssss....


     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee <<<<XXXXmmmm////TTTToooogggggggglllleeeeBBBB....hhhh>>>>


     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          ToggleButton sets nontransitory state data within an
          application.  Usually this widget consists of an indicator
          (square or diamond) with either text or a pixmap on one side
          of it.  However, it can also consist of just text or a
          pixmap without the indicator.

          The toggle graphics display a 1111----ooooffff----mmmmaaaannnnyyyy or NNNN----ooooffff----mmmmaaaannnnyyyy
          selection state.  When a toggle indicator is displayed, a
          square indicator shows an NNNN----ooooffff----mmmmaaaannnnyyyy selection state and a
          diamond indicator shows a 1111----ooooffff----mmmmaaaannnnyyyy selection state.

          ToggleButton implies a selected or unselected state. In the
          case of a label and an indicator, an empty indicator (square
          or diamond shaped) indicates that ToggleButton is
          unselected, and a filled indicator shows that it is
          selected.  In the case of a pixmap toggle, different pixmaps
          are used to display the selected/unselected states.

          The default behavior associated with a ToggleButton in a
          menu depends on the type of menu system in which it resides.
          By default, BBBBSSSSeeeelllleeeecccctttt controls the behavior of the
          ToggleButton.  In addition, BBBBMMMMeeeennnnuuuu controls the behavior of
          the ToggleButton if it resides in a PopupMenu system.  The
          actual mouse button used is determined by its RowColumn
          parent.

          To accommodate the toggle indicator when created, Label's
          resource XXXXmmmmNNNNmmmmaaaarrrrggggiiiinnnnLLLLeeeefffftttt may be increased.


        CCCCllllaaaasssssssseeeessss
          ToggleButton inherits behavior and resources from CCCCoooorrrreeee,
          XXXXmmmmPPPPrrrriiiimmmmiiiittttiiiivvvveeee, and XXXXmmmmLLLLaaaabbbbeeeellll Classes.

          The class pointer is xxxxmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnnWWWWiiiiddddggggeeeettttCCCCllllaaaassssssss.

          The class name is XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn.


        NNNNeeeewwww RRRReeeessssoooouuuurrrrcccceeeessss
          The following table defines a set of widget resources used
          by the programmer to specify data.  The programmer can also
          set the resource values for the inherited classes to set



     Page 1                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



          attributes for this widget.  To reference a resource by name
          or by class in a .Xdefaults file, remove the XXXXmmmmNNNN or XXXXmmmmCCCC
          prefix and use the remaining letters.  To specify one of the
          defined values for a resource in a .Xdefaults file, remove
          the XXXXmmmm prefix and use the remaining letters (in either
          lowercase or uppercase, but include any underscores between
          words).  The codes in the access column indicate if the
          given resource can be set at creation time (CCCC), set by using
          XXXXttttSSSSeeeettttVVVVaaaalllluuuueeeessss (SSSS), retrieved by using XXXXttttGGGGeeeettttVVVVaaaalllluuuueeeessss (GGGG), or is
          not applicable (NNNN////AAAA).

                                           XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn RRRReeeessssoooouuuurrrrcccceeee SSSSeeeetttt
     NNNNaaaammmmeeee                         CCCCllllaaaassssssss                        TTTTyyyyppppeeee             DDDDeeeeffffaaaauuuulllltttt                AAAAcccccccceeeessssssss
     ________________________________________________________________________________________________________
     XmNarmCallback               XmCArmCallback               XtCallbackList   NULL                   C
     XmNdisarmCallback            XmCDisarmCallback            XtCallbackList   NULL                   C
     XmNfillOnSelect              XmCFillOnSelect              Boolean          True                   CSG
     XmNindicatorOn               XmCIndicatorOn               Boolean          True                   CSG
     XmNindicatorSize             XmCIndicatorSize             Dimension        dynamic                CSG
     XmNindicatorType             XmCIndicatorType             unsigned char    dynamic                CSG
     XmNselectColor               XmCSelectColor               Pixel            dynamic                CSG
     XmNselectInsensitivePixmap   XmCSelectInsensitivePixmap   Pixmap           XmUNSPECIFIED_PIXMAP   CSG
     XmNselectPixmap              XmCSelectPixmap              Pixmap           XmUNSPECIFIED_PIXMAP   CSG
     XmNset                       XmCSet                       Boolean          False                  CSG
     XmNspacing                   XmCSpacing                   Dimension        4                      CSG
     XmNvalueChangedCallback      XmCValueChangedCallback      XtCallbackList   NULL                   C
     XmNvisibleWhenOff            XmCVisibleWhenOff            Boolean          dynamic                CSG


          XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk
               Specifies the list of callbacks called when the
               ToggleButton is armed. To arm this widget, press the
               active mouse button while the pointer is inside the
               ToggleButton. For this callback, the reason is
               XXXXmmmmCCCCRRRR____AAAARRRRMMMM.

          XXXXmmmmNNNNddddiiiissssaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk
               Specifies the list of callbacks called when
               ToggleButton is disarmed. To disarm this widget, press
               and release the active mouse button while the pointer
               is inside the ToggleButton.  This widget is also
               disarmed when the user moves out of the widget and
               releases the mouse button when the pointer is outside
               the widget. For this callback, the reason is
               XXXXmmmmCCCCRRRR____DDDDIIIISSSSAAAARRRRMMMM.

          XXXXmmmmNNNNffffiiiillllllllOOOOnnnnSSSSeeeelllleeeecccctttt
               Fills the indicator with the color specified in
               XXXXmmmmNNNNsssseeeelllleeeeccccttttCCCCoooolllloooorrrr and switches the top and bottom shadow
               colors when set to True. Otherwise, it switches only
               the top and bottom shadow colors.




     Page 2                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



          XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn
               Specifies that a toggle indicator is drawn to one side
               of the toggle text or pixmap when set to True.  When
               set to False, no space is allocated for the indicator,
               and it is not displayed.  If XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is True,
               the indicator shadows are switched when the button is
               selected or unselected, but, any shadows around the
               entire widget are not switched.  However, if
               XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is False, any shadows around the entire
               widget are switched when the toggle is selected or
               unselected.

          XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrSSSSiiiizzzzeeee
               Sets the size of the indicator.  If no value is
               specified, the size of the indicator is based on the
               size of the label string or pixmap.  If the label
               string or pixmap changes, the size of the indicator is
               recomputed based on the size of the label string or
               pixmap.  Once a value has been specified for
               XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrSSSSiiiizzzzeeee, the indicator has that size,
               regardless of the size of the label string or pixmap,
               until a new value is specified.

          XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrTTTTyyyyppppeeee
               Specifies if the indicator is a 1111----ooooffff or NNNN----ooooffff indicator.
               For the 1111----ooooffff indicator, the value is XXXXmmmmOOOONNNNEEEE____OOOOFFFF____MMMMAAAANNNNYYYY.
               For the NNNN----ooooffff indicator, the value is XXXXmmmmNNNN____OOOOFFFF____MMMMAAAANNNNYYYY.  The
               NNNN----ooooffff----mmmmaaaannnnyyyy indicator is square. The 1111----ooooffff----mmmmaaaannnnyyyy indicator
               is diamond shaped.  This resource specifies only the
               visuals and does not enforce the behavior.  When the
               ToggleButton is in a RadioBox, the default is
               XXXXmmmmOOOONNNNEEEE____OOOOFFFF____MMMMAAAANNNNYYYY; otherwise, the default is XXXXmmmmNNNN____OOOOFFFF____MMMMAAAANNNNYYYY.

          XXXXmmmmNNNNsssseeeelllleeeeccccttttCCCCoooolllloooorrrr
               Allows the application to specify what color fills the
               center of the square or diamond-shaped indicator when
               it is set.  If this color is the same as either the top
               or the bottom shadow color of the indicator, a one-
               pixel-wide margin is left between the shadows and the
               fill; otherwise, it is filled completely.  This
               resource's default for a color display is a color
               between the background and the bottom shadow color.
               For a monochrome display, the default is set to the
               foreground color.  The meaning of this resource is
               undefined when XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is False.

          XXXXmmmmNNNNsssseeeelllleeeeccccttttIIIInnnnsssseeeennnnssssiiiittttiiiivvvveeeePPPPiiiixxxxmmmmaaaapppp
               Specifies a pixmap used as the button face when the
               ToggleButton is selected and the button is insensitive
               if the Label resource XXXXmmmmNNNNllllaaaabbbbeeeellllTTTTyyyyppppeeee is set to XXXXmmmmPPPPIIIIXXXXMMMMAAAAPPPP.
               If the ToggleButton is unselected and the button is
               insensitive, the pixmap in XXXXmmmmNNNNllllaaaabbbbeeeellllIIIInnnnsssseeeennnnssssiiiittttiiiivvvveeeePPPPiiiixxxxmmmmaaaapppp is



     Page 3                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



               used as the button face.  If no value is specified for
               XXXXmmmmNNNNllllaaaabbbbeeeellllIIIInnnnsssseeeennnnssssiiiittttiiiivvvveeeePPPPiiiixxxxmmmmaaaapppp, that resource is set to the
               value specified for XXXXmmmmNNNNsssseeeelllleeeeccccttttIIIInnnnsssseeeennnnssssiiiittttiiiivvvveeeePPPPiiiixxxxmmmmaaaapppp.

          XXXXmmmmNNNNsssseeeelllleeeeccccttttPPPPiiiixxxxmmmmaaaapppp
               Specifies the pixmap to be used as the button face if
               XXXXmmmmNNNNllllaaaabbbbeeeellllTTTTyyyyppppeeee is XXXXmmmmPPPPIIIIXXXXMMMMAAAAPPPP and the ToggleButton is
               selected. When the ToggleButton is unselected, the
               pixmap specified in Label's XXXXmmmmNNNNllllaaaabbbbeeeellllPPPPiiiixxxxmmmmaaaapppp is used.  If
               no value is specified for XXXXmmmmNNNNllllaaaabbbbeeeellllPPPPiiiixxxxmmmmaaaapppp, that resource
               is set to the value specified for XXXXmmmmNNNNsssseeeelllleeeeccccttttPPPPiiiixxxxmmmmaaaapppp.

          XXXXmmmmNNNNsssseeeetttt
               Displays the button in its selected state if set to
               True. This shows some conditions as active when a set
               of buttons first appears.

          XXXXmmmmNNNNssssppppaaaacccciiiinnnngggg
               Specifies the amount of spacing between the toggle
               indicator and the toggle label (text or pixmap).

          XXXXmmmmNNNNvvvvaaaalllluuuueeeeCCCChhhhaaaannnnggggeeeeddddCCCCaaaallllllllbbbbaaaacccckkkk
               Specifies the list of callbacks called when the
               ToggleButton value is changed.  To change the value,
               press and release the active mouse button while the
               pointer is inside the ToggleButton.  This action also
               causes this widget to be disarmed. For this callback,
               the reason is XXXXmmmmCCCCRRRR____VVVVAAAALLLLUUUUEEEE____CCCCHHHHAAAANNNNGGGGEEEEDDDD.

          XXXXmmmmNNNNvvvviiiissssiiiibbbblllleeeeWWWWhhhheeeennnnOOOOffffffff
               Indicates that the toggle indicator is visible in the
               unselected state when the Boolean value is True. When
               the ToggleButton is in a menu, the default value is
               False.  When the ToggleButton is in a RadioBox, the
               default value is True.


        IIIInnnnhhhheeeerrrriiiitttteeeedddd RRRReeeessssoooouuuurrrrcccceeeessss
          ToggleButton inherits behavior and resources from the
          following superclasses.  For a complete description of each
          resource, refer to the man page for that superclass.

                                               XXXXmmmmLLLLaaaabbbbeeeellll RRRReeeessssoooouuuurrrrcccceeee SSSSeeeetttt
     NNNNaaaammmmeeee                        CCCCllllaaaassssssss                       TTTTyyyyppppeeee                DDDDeeeeffffaaaauuuulllltttt                AAAAcccccccceeeessssssss
     _________________________________________________________________________________________________________
     XmNaccelerator              XmCAccelerator              String              NULL                   CSG
     XmNacceleratorText          XmCAcceleratorText          XmString            NULL                   CSG
     XmNalignment                XmCAlignment                unsigned char       dynamic                CSG







     Page 4                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



     XmNfontList                 XmCFontList                 XmFontList          dynamic                CSG
     XmNlabelInsensitivePixmap   XmCLabelInsensitivePixmap   Pixmap              XmUNSPECIFIED_PIXMAP   CSG
     XmNlabelPixmap              XmCLabelPixmap              Pixmap              XmUNSPECIFIED_PIXMAP   CSG
     XmNlabelString              XmCXmString                 XmString            dynamic                CSG
     XmNlabelType                XmCLabelType                unsigned char       XmSTRING               CSG
     XmNmarginBottom             XmCMarginBottom             Dimension           dynamic                CSG
     XmNmarginHeight             XmCMarginHeight             Dimension           2                      CSG
     XmNmarginLeft               XmCMarginLeft               Dimension           dynamic                CSG
     XmNmarginRight              XmCMarginRight              Dimension           0                      CSG
     XmNmarginTop                XmCMarginTop                Dimension           dynamic                CSG
     XmNmarginWidth              XmCMarginWidth              Dimension           2                      CSG
     XmNmnemonic                 XmCMnemonic                 KeySym              NULL                   CSG
     XmNmnemonicCharSet          XmCMnemonicCharSet          String              dynamic                CSG
     XmNrecomputeSize            XmCRecomputeSize            Boolean             True                   CSG
     XmNstringDirection          XmCStringDirection          XmStringDirection   dynamic                CSG


                                         XXXXmmmmPPPPrrrriiiimmmmiiiittttiiiivvvveeee RRRReeeessssoooouuuurrrrcccceeee SSSSeeeetttt
     NNNNaaaammmmeeee                    CCCCllllaaaassssssss                   TTTTyyyyppppeeee               DDDDeeeeffffaaaauuuulllltttt                AAAAcccccccceeeessssssss
     ________________________________________________________________________________________________
     XmNbottomShadowColor    XmCBottomShadowColor    Pixel              dynamic                CSG
     XmNbottomShadowPixmap   XmCBottomShadowPixmap   Pixmap             XmUNSPECIFIED_PIXMAP   CSG
     XmNforeground           XmCForeground           Pixel              dynamic                CSG
     XmNhelpCallback         XmCCallback             XtCallbackList     NULL                   C
     XmNhighlightColor       XmCHighlightColor       Pixel              dynamic                CSG
     XmNhighlightOnEnter     XmCHighlightOnEnter     Boolean            False                  CSG
     XmNhighlightPixmap      XmCHighlightPixmap      Pixmap             dynamic                CSG
     XmNhighlightThickness   XmCHighlightThickness   Dimension          2                      CSG
     XmNnavigationType       XmCNavigationType       XmNavigationType   XmNONE                 G
     XmNshadowThickness      XmCShadowThickness      Dimension          dynamic                CSG
     XmNtopShadowColor       XmCTopShadowColor       Pixel              dynamic                CSG
     XmNtopShadowPixmap      XmCTopShadowPixmap      Pixmap             dynamic                CSG
     XmNtraversalOn          XmCTraversalOn          Boolean            True                   CSG
     XmNunitType             XmCUnitType             unsigned char      dynamic                CSG
     XmNuserData             XmCUserData             Pointer            NULL                   CSG

                                                   CCCCoooorrrreeee RRRReeeessssoooouuuurrrrcccceeee SSSSeeeetttt
     NNNNaaaammmmeeee                            CCCCllllaaaassssssss                           TTTTyyyyppppeeee             DDDDeeeeffffaaaauuuulllltttt                AAAAcccccccceeeessssssss
     ______________________________________________________________________________________________________________
     XmNaccelerators                 XmCAccelerators                 XtAccelerators   dynamic                CSG
     XmNancestorSensitive            XmCSensitive                    Boolean          dynamic                G
     XmNbackground                   XmCBackground                   Pixel            dynamic                CSG
     XmNbackgroundPixmap             XmCPixmap                       Pixmap           XmUNSPECIFIED_PIXMAP   CSG
     XmNborderColor                  XmCBorderColor                  Pixel            XtDefaultForeground    CSG
     XmNborderPixmap                 XmCPixmap                       Pixmap           XmUNSPECIFIED_PIXMAP   CSG
     XmNborderWidth                  XmCBorderWidth                  Dimension        0                      CSG
     XmNcolormap                     XmCColormap                     Colormap         dynamic                CG
     XmNdepth                        XmCDepth                        int              dynamic                CG







     Page 5                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



     XmNdestroyCallback              XmCCallback                     XtCallbackList   NULL                   C
     XmNheight                       XmCHeight                       Dimension        dynamic                CSG
     XmNinitialResourcesPersistent   XmCInitialResourcesPersistent   Boolean          True                   C
     XmNmappedWhenManaged            XmCMappedWhenManaged            Boolean          True                   CSG
     XmNscreen                       XmCScreen                       Screen *         dynamic                CG
     XmNsensitive                    XmCSensitive                    Boolean          True                   CSG
     XmNtranslations                 XmCTranslations                 XtTranslations   dynamic                CSG
     XmNwidth                        XmCWidth                        Dimension        dynamic                CSG
     XmNx                            XmCPosition                     Position         0                      CSG
     XmNy                            XmCPosition                     Position         0                      CSG


        CCCCaaaallllllllbbbbaaaacccckkkk IIIInnnnffffoooorrrrmmmmaaaattttiiiioooonnnn
          A pointer to the following structure is passed to each
          callback:

          ttttyyyyppppeeeeddddeeeeffff ssssttttrrrruuuucccctttt
          {
            iiiinnnntttt          _r_e_a_s_o_n;
            XXXXEEEEvvvveeeennnntttt       * _e_v_e_n_t;;;;
            iiiinnnntttt          _s_e_t;;;;
          }}}} XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnnCCCCaaaallllllllbbbbaaaacccckkkkSSSSttttrrrruuuucccctttt;;;;


          _r_e_a_s_o_n Indicates why the callback was invoked

          _e_v_e_n_t  Points to the XXXXEEEEvvvveeeennnntttt that triggered the callback

          _s_e_t    Reflects the ToggleButton's current state when the
                 callback occurred, either True (selected) or False
                 (unselected)


        TTTTrrrraaaannnnssssllllaaaattttiiiioooonnnnssss
          XmToggleButton includes translations from Primitive.  The
          XmToggleButton translations for buttons not in a menu system
          are listed below.  These translations may not directly
          correspond to a translation table.

          Note that altering translations in ####oooovvvveeeerrrrrrrriiiiddddeeee or ####aaaauuuuggggmmmmeeeennnntttt
          mode is undefined.

          BBBBSSSSeeeelllleeeecccctttt PPPPrrrreeeessssssss:::: AAAArrrrmmmm(((())))
          BBBBSSSSeeeelllleeeecccctttt RRRReeeelllleeeeaaaasssseeee::::SSSSeeeelllleeeecccctttt(((())))
                         DDDDiiiissssaaaarrrrmmmm(((())))
          KKKKHHHHeeeellllpppp::::         HHHHeeeellllpppp(((())))
          KKKKAAAAccccttttiiiivvvvaaaatttteeee::::     AAAArrrrmmmmAAAAnnnnddddAAAAccccttttiiiivvvvaaaatttteeee(((())))
          KKKKSSSSeeeelllleeeecccctttt::::       AAAArrrrmmmmAAAAnnnnddddAAAAccccttttiiiivvvvaaaatttteeee(((())))


          XmToggleButton inherits menu traversal translations from
          XmLabel.  Additional XmToggleButton translations for



     Page 6                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



          ToggleButtons in a menu system are listed below.  In a Popup
          menu system, BBBBMMMMeeeennnnuuuu also performs the BBBBSSSSeeeelllleeeecccctttt actions.  These
          translations may not directly correspond to a translation
          table.

          BBBBSSSSeeeelllleeeecccctttt PPPPrrrreeeessssssss:::: BBBBttttnnnnDDDDoooowwwwnnnn(((())))
          BBBBSSSSeeeelllleeeecccctttt RRRReeeelllleeeeaaaasssseeee::::BBBBttttnnnnUUUUpppp(((())))
          KKKKHHHHeeeellllpppp::::         HHHHeeeellllpppp(((())))
          KKKKAAAAccccttttiiiivvvvaaaatttteeee::::     AAAArrrrmmmmAAAAnnnnddddAAAAccccttttiiiivvvvaaaatttteeee(((())))
          KKKKSSSSeeeelllleeeecccctttt::::       AAAArrrrmmmmAAAAnnnnddddAAAAccccttttiiiivvvvaaaatttteeee(((())))
          MMMMAAAAnnnnyyyy KKKKCCCCaaaannnncccceeeellll::::  MMMMeeeennnnuuuuSSSShhhheeeellllllllPPPPooooppppddddoooowwwwnnnnOOOOnnnneeee(((())))



        AAAAccccttttiiiioooonnnn RRRRoooouuuuttttiiiinnnneeeessss
          The XmToggleButton action routines are described below:

          AAAArrrrmmmm(((()))):
               If the button was previously unset, this action does
               the following:  If XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is True, it draws the
               indicator shadow so that the indicator looks pressed;
               if XXXXmmmmNNNNffffiiiillllllllOOOOnnnnSSSSeeeelllleeeecccctttt is True, it fills the indicator with
               the color specified by XXXXmmmmNNNNsssseeeelllleeeeccccttttCCCCoooolllloooorrrr.  If
               XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is False, it draws the button shadow so
               that the button looks pressed.  If XXXXmmmmNNNNllllaaaabbbbeeeellllTTTTyyyyppppeeee is
               XXXXmmmmPPPPIIIIXXXXMMMMAAAAPPPP, the XXXXmmmmNNNNsssseeeelllleeeeccccttttPPPPiiiixxxxmmmmaaaapppp is used as the button
               face.  Calls the XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk callbacks.

               If the button was previously set, this action does the
               following:  If both XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn and
               XXXXmmmmNNNNvvvviiiissssiiiibbbblllleeeeWWWWhhhheeeennnnOOOOffffffff are True, it draws the indicator
               shadow so that the indicator looks raised; if
               XXXXmmmmNNNNffffiiiillllllllOOOOnnnnSSSSeeeelllleeeecccctttt is True, it fills the indicator with
               the background color.  If XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is False, it
               draws the button shadow so that the button looks
               raised.  If XXXXmmmmNNNNllllaaaabbbbeeeellllTTTTyyyyppppeeee is XXXXmmmmPPPPIIIIXXXXMMMMAAAAPPPP, the
               XXXXmmmmNNNNllllaaaabbbbeeeellllPPPPiiiixxxxmmmmaaaapppp is used as the button face.  Calls the
               XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk callbacks.

          AAAArrrrmmmmAAAAnnnnddddAAAAccccttttiiiivvvvaaaatttteeee(((()))):
               If the ToggleButton was previously set, unsets it; if
               the ToggleButton was previously unset, sets it.

               In a menu, does the following:  Unposts all menus in
               the menu hierarchy.  Unless the button is already
               armed, calls the XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk callbacks.  Calls the
               XXXXmmmmNNNNvvvvaaaalllluuuueeeeCCCChhhhaaaannnnggggeeeeddddCCCCaaaallllllllbbbbaaaacccckkkk and XXXXmmmmNNNNddddiiiissssaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk
               callbacks.

               Outside a menu, if the button was previously unset,
               this action does the following:  If XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is
               True, it draws the indicator shadow so that the



     Page 7                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



               indicator looks pressed; if XXXXmmmmNNNNffffiiiillllllllOOOOnnnnSSSSeeeelllleeeecccctttt is True, it
               fills the indicator with the color specified by
               XXXXmmmmNNNNsssseeeelllleeeeccccttttCCCCoooolllloooorrrr.  If XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is False, it draws
               the button shadow so that the button looks pressed.  If
               XXXXmmmmNNNNllllaaaabbbbeeeellllTTTTyyyyppppeeee is XXXXmmmmPPPPIIIIXXXXMMMMAAAAPPPP, the XXXXmmmmNNNNsssseeeelllleeeeccccttttPPPPiiiixxxxmmmmaaaapppp is used
               as the button face.  Calls the XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk,
               XXXXmmmmNNNNvvvvaaaalllluuuueeeeCCCChhhhaaaannnnggggeeeeddddCCCCaaaallllllllbbbbaaaacccckkkk, and XXXXmmmmNNNNddddiiiissssaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk
               callbacks.

               Outside a menu, if the button was previously set, this
               action does the following:  If both XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn and
               XXXXmmmmNNNNvvvviiiissssiiiibbbblllleeeeWWWWhhhheeeennnnOOOOffffffff are True, it draws the indicator
               shadow so that the indicator looks raised; if
               XXXXmmmmNNNNffffiiiillllllllOOOOnnnnSSSSeeeelllleeeecccctttt is True, it fills the indicator with
               the background color.  If XXXXmmmmNNNNiiiinnnnddddiiiiccccaaaattttoooorrrrOOOOnnnn is False, it
               draws the button shadow so that the button looks
               raised.  If XXXXmmmmNNNNllllaaaabbbbeeeellllTTTTyyyyppppeeee is XXXXmmmmPPPPIIIIXXXXMMMMAAAAPPPP, the
               XXXXmmmmNNNNllllaaaabbbbeeeellllPPPPiiiixxxxmmmmaaaapppp is used as the button face.  Calls the
               XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk, XXXXmmmmNNNNvvvvaaaalllluuuueeeeCCCChhhhaaaannnnggggeeeeddddCCCCaaaallllllllbbbbaaaacccckkkk, and
               XXXXmmmmNNNNddddiiiissssaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk callbacks.

          BBBBttttnnnnDDDDoooowwwwnnnn(((()))):
               This action unposts any menus posted by the
               ToggleButton's parent menu, disables keyboard traversal
               for the menu, and enables mouse traversal for the menu.
               It draws the shadow in the armed state and, unless the
               button is already armed, calls the XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk
               callbacks.

          BBBBttttnnnnUUUUpppp(((()))):
               This action unposts all menus in the menu hierarchy.
               If the ToggleButton was previously set, unsets it; if
               the ToggleButton was previously unset, sets it.  It
               calls the XXXXmmmmNNNNvvvvaaaalllluuuueeeeCCCChhhhaaaannnnggggeeeeddddCCCCaaaallllllllbbbbaaaacccckkkk callbacks and then
               the XXXXmmmmNNNNddddiiiissssaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk callbacks.

          DDDDiiiissssaaaarrrrmmmm(((()))):
               Calls the callbacks for XXXXmmmmNNNNddddiiiissssaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk.

          HHHHeeeellllpppp(((()))):
               In a Pulldown or Popup MenuPane, unposts all menus in
               the menu hierarchy and restores keyboard focus to the
               tab group that had the focus before the menu system was
               entered.  Calls the callbacks for XXXXmmmmNNNNhhhheeeellllppppCCCCaaaallllllllbbbbaaaacccckkkk if
               any exist.  If there are no help callbacks for this
               widget, this action calls the help callbacks for the
               nearest ancestor that has them.

          MMMMeeeennnnuuuuSSSShhhheeeellllllllPPPPooooppppddddoooowwwwnnnnOOOOnnnneeee(((()))):
               In a toplevel Pulldown MenuPane from a MenuBar, unposts
               the menu, disarms the MenuBar CascadeButton and the
               MenuBar, and restores keyboard focus to the tab group



     Page 8                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



               that had the focus before the MenuBar was entered.  In
               other Pulldown MenuPanes, unposts the menu.

               In a Popup MenuPane, unposts the menu and restores
               keyboard focus to the widget from which the menu was
               posted.

          SSSSeeeelllleeeecccctttt(((()))):
               If the pointer is within the button, takes the
               following actions:  If the button was previously unset,
               sets it; if the button was previously set, unsets it.
               Calls the XXXXmmmmNNNNvvvvaaaalllluuuueeeeCCCChhhhaaaannnnggggeeeeddddCCCCaaaallllllllbbbbaaaacccckkkk callbacks.


        AAAAddddddddiiiittttiiiioooonnnnaaaallll BBBBeeeehhhhaaaavvvviiiioooorrrr
          This widget has the additional behavior described below:

          <<<<EEEEnnnntttteeeerrrrWWWWiiiinnnnddddoooowwww>>>>:
               In a menu, if keyboard traversal is enabled, this
               action does nothing.  Otherwise, it draws the shadow in
               the armed state and calls the XXXXmmmmNNNNaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk callbacks.

               If the ToggleButton is not in a menu and the cursor
               leaves and then reenters the ToggleButton's window
               while the button is pressed, this action restores the
               button's armed appearance.

          <<<<LLLLeeeeaaaavvvveeeeWWWWiiiinnnnddddoooowwww>>>>:
               In a menu, if keyboard traversal is enabled, this
               action does nothing.  Otherwise, it draws the shadow in
               the unarmed state and calls the XXXXmmmmNNNNddddiiiissssaaaarrrrmmmmCCCCaaaallllllllbbbbaaaacccckkkk
               callbacks.

               If the ToggleButton is not in a menu and the cursor
               leaves the ToggleButton's window while the button is
               pressed, this action restores the button's unarmed
               appearance.


        VVVViiiirrrrttttuuuuaaaallll BBBBiiiinnnnddddiiiinnnnggggssss
          The bindings for virtual keys are vendor specific.  For
          information about bindings for virtual buttons and keys, see
          VVVViiiirrrrttttuuuuaaaallllBBBBiiiinnnnddddiiiinnnnggggssss((((3333XXXX)))).












     Page 9                                           (printed 1/9/91)






     XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))  OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn   XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX))))



     RRRREEEELLLLAAAATTTTEEEEDDDD IIIINNNNFFFFOOOORRRRMMMMAAAATTTTIIIIOOOONNNN
          CCCCoooorrrreeee((((3333XXXX)))), XXXXmmmmCCCCrrrreeeeaaaatttteeeeRRRRaaaaddddiiiiooooBBBBooooxxxx((((3333XXXX)))), XXXXmmmmCCCCrrrreeeeaaaatttteeeeTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnn((((3333XXXX)))),
          XXXXmmmmLLLLaaaabbbbeeeellll((((3333XXXX)))), XXXXmmmmPPPPrrrriiiimmmmiiiittttiiiivvvveeee((((3333XXXX)))), XXXXmmmmRRRRoooowwwwCCCCoooolllluuuummmmnnnn((((3333XXXX)))),
          XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnnGGGGeeeettttSSSSttttaaaatttteeee((((3333XXXX)))), and XXXXmmmmTTTToooogggggggglllleeeeBBBBuuuuttttttttoooonnnnSSSSeeeettttSSSSttttaaaatttteeee((((3333XXXX)))).



















































     Page 10                                          (printed 1/9/91)



