


     XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy((((3333XXXX)))) OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn  XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy((((3333XXXX))))



     NNNNAAAAMMMMEEEE
          XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy ---- AAAA cccclllliiiippppbbbbooooaaaarrrrdddd ffffuuuunnnnccccttttiiiioooonnnn tttthhhhaaaatttt ccccooooppppiiiieeeessss aaaa ddddaaaattttaaaa
          iiiitttteeeemmmm ttttoooo tttteeeemmmmppppoooorrrraaaarrrryyyy ssssttttoooorrrraaaaggggeeee ffffoooorrrr llllaaaatttteeeerrrr ccccooooppppyyyyiiiinnnngggg ttttoooo cccclllliiiippppbbbbooooaaaarrrrdddd....


     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee <<<<XXXXmmmm////XXXXmmmm....hhhh>>>>
          ####iiiinnnncccclllluuuuddddeeee <<<<XXXXmmmm////CCCCuuuuttttPPPPaaaasssstttteeee....hhhh>>>>

          iiiinnnntttt XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy ((((_d_i_s_p_l_a_y, _w_i_n_d_o_w, _i_t_e_m__i_d, _f_o_r_m_a_t__n_a_m_e,
          _b_u_f_f_e_r, _l_e_n_g_t_h, _p_r_i_v_a_t_e__i_d, _d_a_t_a__i_d))))
               DDDDiiiissssppppllllaaaayyyy    * _d_i_s_p_l_a_y;;;;
               WWWWiiiinnnnddddoooowwww     _w_i_n_d_o_w;;;;
               lllloooonnnngggg       _i_t_e_m__i_d;;;;
               cccchhhhaaaarrrr       * _f_o_r_m_a_t__n_a_m_e;;;;
               cccchhhhaaaarrrr       * _b_u_f_f_e_r;;;;
               uuuunnnnssssiiiiggggnnnneeeedddd lllloooonnnngggg_l_e_n_g_t_h;;;;
               iiiinnnntttt        _p_r_i_v_a_t_e__i_d;;;;
               iiiinnnntttt        * _d_a_t_a__i_d;;;;


     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy copies a data item to temporary storage.
          The data item is moved from temporary storage to the
          clipboard data structure when a call to XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddEEEEnnnnddddCCCCooooppppyyyy
          is made.  Additional calls to XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy before a call
          to XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddEEEEnnnnddddCCCCooooppppyyyy adds additional data item formats to
          the same data item or append data to an existing format.
          Formats are described in the _I_n_t_e_r-_C_l_i_e_n_t _C_o_m_m_u_n_i_c_a_t_i_o_n
          _C_o_n_v_e_n_t_i_o_n_s _M_a_n_u_a_l (ICCCM) as targets.

          NNNNOOOOTTTTEEEE::::  Do not call XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy before a call to
          XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddSSSSttttaaaarrrrttttCCCCooooppppyyyy has been made.  The latter function
          allocates temporary storage required by XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy.

          If the _b_u_f_f_e_r argument is NULL, the data is considered to be
          passed by name.  When data that has been passed by name is
          later requested by another application, the application that
          owns the data receives a callback with a request for the
          data.  The application that owns the data must then transfer
          the data to the clipboard with the XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyyBBBByyyyNNNNaaaammmmeeee
          function.  When a data item that was passed by name is
          deleted from the clipboard, the application that owns the
          data receives a callback stating that the data is no longer
          needed.

          For information on the callback function, see the callback
          argument description for XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddSSSSttttaaaarrrrttttCCCCooooppppyyyy.


          _d_i_s_p_l_a_y     Specifies a pointer to the DDDDiiiissssppppllllaaaayyyy structure
                      that was returned in a previous call to



     Page 1                                           (printed 1/9/91)






     XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy((((3333XXXX)))) OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn  XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy((((3333XXXX))))



                      XXXXOOOOppppeeeennnnDDDDiiiissssppppllllaaaayyyy or XXXXttttDDDDiiiissssppppllllaaaayyyy.

          _w_i_n_d_o_w      Specifies a widget's window ID that relates the
                      application window to the clipboard.  The
                      widget's window ID can be obtained by using
                      XXXXttttWWWWiiiinnnnddddoooowwww.  The same application instance should
                      pass the same window ID to each of the clipboard
                      functions that it calls.

          _i_t_e_m__i_d     Specifies the number assigned to this data item.
                      This number was returned by a previous call to
                      XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddSSSSttttaaaarrrrttttCCCCooooppppyyyy.

          _f_o_r_m_a_t__n_a_m_e Specifies the name of the format in which the
                      data item is stored on the clipboard.  Format is
                      known as target in the ICCCM.

          _b_u_f_f_e_r      Specifies the buffer from which the clipboard
                      copies the data.

          _l_e_n_g_t_h      Specifies the length of the data being copied to
                      the clipboard.

          _p_r_i_v_a_t_e__i_d  Specifies the private data that the application
                      wants to store with the data item.

          _d_a_t_a__i_d     Specifies an identifying number assigned to the
                      data item that uniquely identifies the data item
                      and the format.  This argument is required only
                      for data that is passed by name.


     RRRREEEETTTTUUUURRRRNNNN VVVVAAAALLLLUUUUEEEE
          CCCClllliiiippppbbbbooooaaaarrrrddddSSSSuuuucccccccceeeessssssss
                      The function is successful.

          CCCClllliiiippppbbbbooooaaaarrrrddddLLLLoooocccckkkkeeeedddd
                      The function failed because the clipboard was
                      locked by another application.  The application
                      can continue to call the function again with the
                      same parameters until the lock goes away.  This
                      gives the application the opportunity to ask if
                      the user wants to keep trying or to give up on
                      the operation.

          CCCClllliiiippppbbbbooooaaaarrrrddddFFFFaaaaiiiillll
                      The function failed because XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddSSSSttttaaaarrrrttttCCCCooooppppyyyy
                      was not called or because the data item contains
                      too many formats.


     RRRREEEELLLLAAAATTTTEEEEDDDD IIIINNNNFFFFOOOORRRRMMMMAAAATTTTIIIIOOOONNNN



     Page 2                                           (printed 1/9/91)






     XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy((((3333XXXX)))) OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn  XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyy((((3333XXXX))))



          XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddCCCCooooppppyyyyBBBByyyyNNNNaaaammmmeeee((((3333XXXX)))), XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddEEEEnnnnddddCCCCooooppppyyyy((((3333XXXX)))), and
          XXXXmmmmCCCClllliiiippppbbbbooooaaaarrrrddddSSSSttttaaaarrrrttttCCCCooooppppyyyy((((3333XXXX)))).





















































     Page 3                                           (printed 1/9/91)



