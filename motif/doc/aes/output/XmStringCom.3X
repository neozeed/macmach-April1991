


     XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCoooommmmppppaaaarrrreeee((((3333XXXX)))) OOOOppppeeeennnn SSSSooooffffttttwwwwaaaarrrreeee FFFFoooouuuunnnnddddaaaattttiiiioooonnnn  XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCoooommmmppppaaaarrrreeee((((3333XXXX))))



     NNNNAAAAMMMMEEEE
          XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCoooommmmppppaaaarrrreeee ---- aaaa ccccoooommmmppppoooouuuunnnndddd ssssttttrrrriiiinnnngggg ffffuuuunnnnccccttttiiiioooonnnn tttthhhhaaaatttt ccccoooommmmppppaaaarrrreeeessss
          ttttwwwwoooo ssssttttrrrriiiinnnnggggssss....


     AAAAEEEESSSS SSSSUUUUPPPPPPPPOOOORRRRTTTT LLLLEEEEVVVVEEEELLLL
          Trial-use

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ####iiiinnnncccclllluuuuddddeeee <<<<XXXXmmmm////XXXXmmmm....hhhh>>>>

          BBBBoooooooolllleeeeaaaannnn XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCoooommmmppppaaaarrrreeee ((((_s_1, _s_2))))
               XXXXmmmmSSSSttttrrrriiiinnnngggg  _s_1;;;;
               XXXXmmmmSSSSttttrrrriiiinnnngggg  _s_2;;;;


     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCoooommmmppppaaaarrrreeee returns a Boolean value indicating the
          results of a semantically equivalent comparison of two
          compound strings.

          Semantically equivalent means that the strings have the same
          text components, directions, and separators.  If character
          sets are specified, they must be equal as well.  In general,
          if two compound strings are created with the same (char *)
          string using XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCrrrreeeeaaaatttteeeeSSSSiiiimmmmpppplllleeee in the same language
          environment, the compound strings compare as equal.  If two
          compound strings are created with the same (char *) string
          and the same character set using XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCrrrreeeeaaaatttteeee, the strings
          compare as equal.  The result of comparing a compound string
          created with XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCrrrreeeeaaaatttteeee against a compound string
          created with XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCrrrreeeeaaaatttteeeeSSSSiiiimmmmpppplllleeee is undefined.


          _s_1     Specifies a compound string to be compared with _s_2

          _s_2     Specifies a compound string to be compared with _s_1


     RRRREEEETTTTUUUURRRRNNNN VVVVAAAALLLLUUUUEEEE
          Returns True if two compound strings are equivalent.


     RRRREEEELLLLAAAATTTTEEEEDDDD IIIINNNNFFFFOOOORRRRMMMMAAAATTTTIIIIOOOONNNN
          XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCrrrreeeeaaaatttteeee((((3333XXXX)))) and XXXXmmmmSSSSttttrrrriiiinnnnggggCCCCrrrreeeeaaaatttteeeeSSSSiiiimmmmpppplllleeee((((3333XXXX)))).










     Page 1                                           (printed 1/9/91)



