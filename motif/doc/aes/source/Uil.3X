.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1991 Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH Uil 3X
.SH NAME
\fBUil\fP - Invokes the UIL compiler from within an application.
.iX "Uil"
.iX "uil functions" "Uil"
.iX "uil compiler"
.SH "AES SUPPORT LEVEL"
Trial-use
.SH SYNOPSIS
\fB
\&#include <uil/UilDef.h>
.sp 1
Uil_status_type Uil (\fIcommand_desc, compile_desc, message_cb,
.br
.ta 1i
message_data, status_cb, status_data\fP)
.br
.ta 0.5i 2.5i
	Uil_command_type	\fI*command_desc\fP;
.br
	Uil_compile_desc_type	\fI*compile_desc\fP;
.br
	Uil_continue_type	(\fI*message_cb\fP) ();
.br
	char	\fI*message_data\fP;
.br 
	Uil_continue_type	(\fI*status_cb\fP) ();
.br
	char	\fI*status_data\fP;
.fi
\fP
.sp
.ne 3i
.SH DESCRIPTION
.PP
The \fBUil\fP function provides a callable entry point for the UIL
compiler. The
\fBUil\fP callable interface can be used to process 
a UIL source file and to
generate UID files, as well as return a detailed description of the
UIL source module in the form of a symbol table (parse tree).
.IP "\fIcommand_desc\fP" 20n
Specifies the \fBuil\fP command line.
.IP "\fIcompile_desc\fP"
Returns the results of the compilation.
.IP "\fImessage_cb\fP"
Specifies a callback function that is called when the compiler 
encounters errors in the UIL source.
.IP "\fImessage_data\fP"
Specifies user data that is passed to the message callback function
(message_cb). Note that this argument is not interpreted by UIL, and is
used exclusively by the calling application.
.br
.ne 6
.IP "\fIstatus_cb\fP"
Specifies a callback function that is called to allow X applications to service
X events such as updating the screen.  This function is called
at various check points, which have been hard coded into the UIL compiler.
The status_update_delay argument in command_desc specifies the number of
check points to be passed before the status_cb function is invoked.
.IP "\fIstatus_data\fP"
Specifies user data that is passed to the status callback function
(status_cb). Note that this argument is not interpreted by the UIL compiler,
and is used exclusively by the calling application.
.PP
The data structures \fBUil_command_type\fP and
\fBUil_compile_desc_type\fP are detailed below.
.PP
.nf
\f(CWtypedef struct Uil_command_type {
.in +5n
char *source_file;
    /* single source to compile */
char *resource_file; /* name of output file */
char *listing_file; /* name of listing file */
unsigned int *include_dir_count;
    /* number of dirs. in include_dir */
char *((*include_dir) []);
    /* dir. to search for include files */
unsigned listing_file_flag: 1;
    /* produce a listing */
unsigned resource_file_flag: 1;
    /* generate UID output */
unsigned machine_code_flag: 1;
    /* generate machine code */
unsigned report_info_msg_flag: 1;
    /* report info messages */
unsigned report_warn_msg_flag: 1;
    /* report warnings */
unsigned parse_tree_flag: 1;
    /* generate parse tree */
unsigned int status_update_delay;
    /* number of times a status point is */
    /* passed before calling status_cb */
    /* function 0 means called every time */
.in -5n
};
.sp
typedef struct Uil_compile_desc_type {
.in +5n
unsigned int compiler_version;
    /* version number of compiler */
unsigned int data_version;
    /* version number of structures */
char *parse_tree_root; /* parse tree output */ 
unsigned int message_count [Uil_k_max_status+1];
/* array of severity counts */
.in -5n
};\fP
.fi
.sp 1
.PP
.ne 3.5i
Following is a description of the message callback function specified by
\fImessage_cb\fP:
.PP
.ne 2i
\fB
Uil_continue_type (\fI*message_cb\fP) (\fImessage_data, message_number,
severity, msg_buffer, src_buffer, ptr_buffer, loc_buffer,
message_count\fP)
.br
.ta 0.5i 1.5i
	char	\fI*message_data\fP;
.br
	int	\fImessage_number\fP;
.br
	int	\fIseverity\fP;
.br
	char	\fI*msg_buffer\fP, \fI*src_buffer\fP;
.br
	char	\fI*ptr_buffer\fP, \fI*loc_buffer\fP;
.br
	int	\fImessage_count\fP[];
.fi
\fP
.PP
Specifies a callback function that UIL invokes instead of printing an
error message when the compiler encounters an error in the UIL source.
The callback should return one of these values:
.IP \fBUil_k_terminate\fP 20n
Tells UIL to terminate processing of the source file.
.IP \fBUil_k_continue\fP 20n
Tells UIL to continue processing the source file.
.PP
.ne 3
Following are the arguments:
.IP \fImessage_data\fP 20n
Data supplied by the application as the \fImessage_data\fP argument to
the \fBUil\fP function.
UIL does not interpret this data in any way; it just passes it to the
callback.
.IP \fImessage_number\fP 20n
An index into a table of error messages and severities, for internal use
by UIL.
.IP \fIseverity\fP 20n
An integer that indicates the severity of the error.
The possible values are the status constants returned by the \fBUil\fP
function.
See the "RETURN VALUE" section below.
.IP \fImsg_buffer\fP 20n
A string that describes the error.
.IP \fIsrc_buffer\fP 20n
A string consisting of the source line where the error occurred.
This is not always available; the argument is then NULL.
.sp
.ne 2i
.IP \fIptr_buffer\fP 20n
A string consisting of whitespace and a printing character in the
character position corresponding to the column of the source line where
the error occurred.
This string may be printed beneath the source line to provide a visual
indication of the column where the error occurred.
This is not always available; the argument is then NULL.
.IP \fIloc_buffer\fP 20n
A string identifying the line number and file of the source line where
the error occurred.
This is not always available; the argument is then NULL.
.IP \fImessage_count\fP 20n
An array of integers containing the number of diagnostic messages issued
thus far for each severity level.
To find the number of messages issued for the current severity level,
use the \fIseverity\fP argument as the index into this array.
.sp 1
.PP
Following is a description of the status callback function specified by
\fIstatus_cb\fP:
.PP
.ne 2i
\fB
Uil_continue_type (\fI*status_cb\fP) (\fIstatus_data, percent_complete,
.br
.ta 1i
lines_processed, current_file, message_count\fP)
.br
.ta 0.5i 1.5i
		char	\fI*status_data\fP;
.br
		int	\fIpercent_complete\fP;
.br
		int	\fIlines_processed\fP;
.br
		char	\fI*current_file\fP;
.br
		int	\fImessage_count\fP[];
\fP
.PP
Specifies a callback function that is invoked to allow X applications to
service X events such as updating the screen.
The callback should return one of these values:
.IP \fBUil_k_terminate\fP 25n
Tells UIL to terminate processing of the source file.
.IP \fBUil_k_continue\fP 25n
Tells UIL to continue processing the source file.
.PP
.ne 2i
Following are the arguments:
.IP \fIstatus_data\fP 20n
Data supplied by the application as the \fIstatus_data\fP argument to
the \fBUil\fP function.
UIL does not interpret this data in any way; it just passes it to the
callback.
.IP \fIpercent_complete\fP 20n
An integer indicating what percentage of the current source file has
been processed so far.
.IP \fIlines_processed\fP 20n
An integer indicating how many lines of the current source file have
been read so far.
.IP \fIcurrent_file\fP 20n
A string containing the pathname of the current source file.
.IP \fImessage_count\fP 20n
An array of integers containing the number of diagnostic messages issued
thus far for each severity level.
To find the number of messages issued for a given severity level, use
the severity level as the index into this array.
The possible severity levels 
are the status constants returned by the
\fBUil\fP function.
See the "RETURN VALUE" section below.
.SH RETURN VALUE
.PP
This function returns one of these
status return constants:
.IP "\fBUil_k_success_status\fP" 25n
The operation succeeded.
.IP "\fBUil_k_info_status\fP"
The operation succeeded, and an informational
message is returned.
.IP "\fBUil_k_warning_status\fP"
The operation succeeded, and a warning
message is returned.
.IP "\fBUil_k_error_status\fP"
The operation failed due to an error.
.IP "\fBUil_k_severe_status\fP"
The operation failed due to an error.
