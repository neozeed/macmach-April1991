# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

###########################################################################
# Makefile generated from "Imake.tmpl" and </tmp/IIf.a04756>
# $XConsortium: Imake.tmpl,v 1.77 89/12/18 17:01:37 jim Exp $
#
# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit hp.cf to change

      SYSLIBS=-lXt -lX11 -lPW
      MWM_DEFINES=-DLARGECURSORS -DSHAPE -DOPAQUE
      YACCFLAGS = -Nm20000

# platform:  $XConsortium: hp.cf,v 1.24 89/12/10 11:57:02 rws Exp $
# operating system:  HP-UX 6.5

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.21 89/12/06 11:46:50 jim Exp $

            SHELL = /bin/sh

              TOP = ../../.
      CURRENT_DIR = ./lib/Xm

               AR = ar cq
  BOOTSTRAPCFLAGS =
               CC = cc

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
          INSTALL = $(SCRIPTSRC)/bsdinst.sh
               LD = ld
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -ax -Nd4000 -Ns3300 -Ne700 -Np200 -Na25000 -DSYSV
               LN = ln -s
             MAKE = make
               MV = mv -f
               CP = cp
           RANLIB = /bin/true
  RANLIBINSTFLAGS =
               RM = rm -f
     STD_INCLUDES =
  STD_CPP_DEFINES = -DSYSV
      STD_DEFINES = -Wc,-Nd4000,-Ns5300,-Ne700,-Np200,-Nw4000 -DSYSV -D_NO_PROTO -DMALLOC_0_RETURNS_NULL
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS = ctags

           MFLAGS = -$(MAKEFLAGS)

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

          DESTDIR =

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS =
      COMPATFLAGS =

      ALLINCLUDES = $(STD_INCLUDES) $(TOP_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES) $(COMPATFLAGS)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)
   LDCOMBINEFLAGS = -X -r

        MACROFILE = hp.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

###########################################################################
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $

###########################################################################
# X Window System make variables; this need to be coordinated with rules
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $

          PATHSEP = /
        USRLIBDIR = $(DESTDIR)/usr/lib
           BINDIR = $(DESTDIR)/usr/bin/X11
          INCROOT = $(DESTDIR)/usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = $(DESTDIR)/usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           AWMDIR = $(LIBDIR)/awm
           TWMDIR = $(LIBDIR)/twm
           GWMDIR = $(LIBDIR)/gwm
          MANPATH = $(DESTDIR)/usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)n
        LIBMANDIR = $(MANSOURCEPATH)3
      XAPPLOADDIR = $(LIBDIR)/app-defaults

       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
              RGB = $(RGBSRC)/rgb
            FONTC = $(BDFTOSNFSRC)/bdftosnf
        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = /bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
     EXTENSIONSRC = $(TOP)/extensions

  DEPEXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
     EXTENSIONLIB =   $(DEPEXTENSIONLIB)

          DEPXLIB = $(DEPEXTENSIONLIB) $(XLIBSRC)/libX11.a
             XLIB = $(EXTENSIONLIB)  $(XLIBSRC)/libX11.a

      DEPXAUTHLIB = $(XAUTHSRC)/libXau.a
         XAUTHLIB =  $(DEPXAUTHLIB)

        DEPXMULIB = $(XMUSRC)/libXmu.a
           XMULIB =  $(DEPXMULIB)

       DEPOLDXLIB = $(OLDXLIBSRC)/liboldX.a
          OLDXLIB =  $(DEPOLDXLIB)

      DEPXTOOLLIB = $(TOOLKITSRC)/libXt.a
         XTOOLLIB =  $(DEPXTOOLLIB)

        DEPXAWLIB = $(AWIDGETSRC)/libXaw.a
           XAWLIB =  $(DEPXAWLIB)

 LINTEXTENSIONLIB = $(EXTENSIONSRC)/lib/llib-lXext.ln
         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln

          DEPLIBS = $(LOCAL_LIBRARIES)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

      USRINCDIR = $(DESTDIR)/usr/include
        TESTSRC = $(TOP)/tests
    MTOOLKITSRC = $(LIBSRC)/Xt
     MWIDGETSRC = $(LIBSRC)/Xm
   MRESOURCESRC = $(LIBSRC)/Mrm
         UILSRC = $(CLIENTSRC)/uil
            UIL = $(UILSRC)/uil
      XMTOOLLIB = $(MTOOLKITSRC)/libXt.a
          XMLIB = $(MWIDGETSRC)/libXm.a
   MRESOURCELIB = $(MRESOURCESRC)/libMrm.a
         UILLIB = $(UILSRC)/libUil.a
  LINTMRESOURCE = $(MRESOURCESRC)/libMrm.a
LINTXMWIDGETLIB = $(MWIDGETSRC)/llib-l/Xm.ln
     LINTXMTOOL = $(MTOOLKITSRC)/llib-lXt.ln
     LINTUILLIB = $(UILSRC)/llib-lUil.ln

###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.67 89/12/18 17:14:15 jim Exp $

###########################################################################
# start of Imakefile

     DEFINES = -DR4_INTRINSICS
INSTALLFLAGS = $(INSTINCFLAGS)
    INCLUDES = -I. -I$(TOOLKITSRC) -I$(TOP) -I$(LIBSRC) -I$(INCLUDESRC)
    LINTLIBS = $(LINTXLIB) $(LINTXTOOL)

HEADERS = ArrowB.h	ArrowBG.h	ArrowBGP.h	ArrowBP.h \
	BaseClassI.h BulletinB.h	BulletinBP.h	CacheP.h \
	CascadeB.h	CascadeBG.h \
	CascadeBGP.h	CascadeBP.h	Command.h	CommandP.h \
	CutPaste.h	CutPasteP.h	DialogS.h	DialogSP.h \
	DrawingA.h	DrawingAP.h	DrawnB.h	DrawnBP.h \
	FileSB.h	FileSBP.h	Form.h		FormP.h \
	Frame.h		FrameP.h	Label.h		LabelG.h \
	LabelGP.h	LabelP.h	List.h		ListP.h \
	MainW.h		MainWP.h	MenuShell.h	MenuShellP.h \
	MessageB.h	MessageBP.h	PanedW.h	PanedWP.h \
	PushB.h		PushBG.h	PushBGP.h	PushBP.h \
	RowColumn.h	RowColumnP.h	SashP.h		Scale.h \
	ScaleP.h	ScrollBar.h	ScrollBarP.h	ScrolledW.h \
	ScrolledWP.h	SelectioB.h	SelectioBP.h	SeparatoG.h \
	SeparatoGP.h	Separator.h	SeparatorP.h	StringSrcP.h \
	Text.h		TextInP.h	TextOutP.h	TextP.h \
	TextSrcP.h	ToggleB.h	ToggleBG.h	ToggleBGP.h \
	ToggleBP.h	Xm.h		XmP.h		bitmaps.h \
	TextF.h        TextFP.h \
	VirtKeys.h	VirtKeysP.h	VendorE.h	VendorEP.h \
	Traversal.h	ExtObject.h	ExtObjectP.h	VaSimple.h

X11HEADERS =\
	AtomMgr.h \
	Protocols.h \
	ProtocolsP.h \
	MwmUtil.h

SRCS =\
	ArrowB.c \
	ArrowBG.c \
	ArrowBI.c \
	BulletinB.c \
	CascadeB.c \
	CascadeBG.c \
	Command.c \
	CutPaste.c \
	Dest.c \
	DialogS.c \
	DrawingA.c \
	DrawnB.c \
	ExtObject.c \
	FileSB.c \
	Form.c \
	Frame.c	\
	Gadget.c \
	GadgetUtil.c \
       	GeoUtils.c \
	GetSecRes.c \
	HeapMgr.c \
	ImageCache.c \
	Label.c \
	LabelG.c \
	List.c \
        MainW.c \
	MapEvents.c \
	MenuShell.c \
	MenuUtil.c \
	MessageB.c \
	NavigMap.c \
	PanedW.c\
	PushB.c \
        PushBG.c \
	ReadImage.c \
	ResConvert.c \
	ResInd.c \
        RowColumn.c \
	Sash.c	\
	Scale.c \
	ScrollBar.c \
        ScrolledW.c \
	SelectioB.c \
	SeparatoG.c \
	Separator.c \
	Simple.c \
        Text.c \
	TextIn.c \
	TextOut.c \
	TextStrSrc.c \
        ToggleB.c \
	ToggleBG.c \
	ToggleBI.c \
	TrackLoc.c \
	UniqueEvnt.c \
	VaSimple.c \
	Vendor.c \
	VirtKeys.c \
        Visual.c \
	XmString.c \
	TextF.c \
	AtomMgr.c \
	Cache.c \
	Protocols.c \
	Primitive.c \
	Manager.c \
	Traversal.c \
	VendorE.c \
	BaseClass.c \
	Desktop.c

OBJS1 =\
	ArrowB.o \
	ArrowBG.o \
	ArrowBI.o \
	BulletinB.o \
	CascadeB.o \
	CascadeBG.o \
	Command.o \
	CutPaste.o \
	DialogS.o \
	DrawingA.o \
	DrawnB.o \
	FileSB.o \
	Form.o \
	Frame.o	\
	Gadget.o \
	GadgetUtil.o \
       	GeoUtils.o \
	HeapMgr.o \
	ImageCache.o \
	Label.o \
	LabelG.o \
	List.o \
        MainW.o \
	MapEvents.o \
	MenuShell.o \
	MenuUtil.o \
	MessageB.o \
	NavigMap.o \
	PanedW.o\
	PushB.o \
        PushBG.o \
	ReadImage.o \
	ResConvert.o \
	ResInd.o \
        RowColumn.o \
	Sash.o	\
	Scale.o \
	ScrollBar.o \
        ScrolledW.o \
	SelectioB.o \
	SeparatoG.o \
	Separator.o \
	Simple.o \
        Text.o \
	TextIn.o \
	TextOut.o \
	TextStrSrc.o \
        ToggleB.o \
	ToggleBG.o \
	ToggleBI.o \
	UniqueEvnt.o \
        VaSimple.o \
        Visual.o \
	XmString.o \
	TextF.o \
	AtomMgr.o \
	Cache.o \
	GetSecRes.o \
	TrackLoc.o \
	Protocols.o

OBJS2 =\
	Primitive.o \
	Manager.o \
	Traversal.o \
	Dest.o \
	Vendor.o \
	VendorE.o \
	ExtObject.o \
	BaseClass.o \
	VirtKeys.o \
	Desktop.o

OBJS = $(OBJS1) $(OBJS2)

.c.o:
	$(RM) $@
	$(CC) -c $(CFLAGS) $*.c

all:: libXm.a

libXm.a: $(OBJS)
	$(RM) $@
	$(AR) $@ $(OBJS)
	$(RANLIB) $@

lintlib:: llib-lXm.ln

llib-lXm.ln: $(SRCS)
	$(RM) $@
	$(LINT) $(LINTLIBFLAG)Xm $(LINTFLAGS) $(SRCS)

includes::
	$(MKDIRHIER) $(BUILDINCDIR)/Xm
	@(set -x; cd $(BUILDINCDIR)/Xm; for i in $(HEADERS); do \
	$(RM) $$i; \
	$(LN) $(BUILDINCTOP)/../$(CURRENT_DIR)/$$i .; \
	done)

includes::
	$(MKDIRHIER) $(BUILDINCDIR)/Xm
	@(set -x; cd $(BUILDINCDIR)/Xm; for i in $(X11HEADERS); do \
	$(RM) $$i; \
	$(LN) $(BUILDINCTOP)/../$(CURRENT_DIR)/$$i .; \
	done)

includes::
	$(MKDIRHIER) $(BUILDINCDIR)/.
	@(set -x; cd $(BUILDINCDIR)/.; for i in $(X11HEADERS); do \
	$(RM) $$i; \
	$(LN) $(BUILDINCTOP)/./$(CURRENT_DIR)/$$i .; \
	done)

install::
	$(MKDIRHIER) $(USRINCDIR)/Xm

install:: libXm.a
	$(INSTALL) -c $(INSTLIBFLAGS) libXm.a $(USRLIBDIR)
	$(RANLIB) $(RANLIBINSTFLAGS) $(USRLIBDIR)/libXm.a

install.ln:: llib-lXm.ln
	$(INSTALL) -c $(INSTLIBFLAGS) llib-lXm.ln $(LINTLIBDIR)

install:: $(HEADERS)
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(HEADERS); do \
	(set -x; $(INSTALL) -c $(INSTALLFLAGS) $$i $(USRINCDIR)/Xm); \
	done

install:: $(X11HEADERS)
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(X11HEADERS); do \
		(set -x; $(INSTALL) -c $(INSTALLFLAGS) $$i $(USRINCDIR)/Xm; \
		$(RM) $(USRINCDIR)/X11/$$i; \
		cd $(USRINCDIR)/X11; $(LN) ../Xm/$$i .); \
	done

install:: XKeysymDB
#  	If XKeysymDB exists and doesn't already have OSF keysyms, prepend ours
#	If it has OSF keysyms, leave it alone.
#  	Otherwise (doesn't exist), install ours.
	-@if [ -f $(LIBDIR)/XKeysymDB ]; then \
	   if [ "`grep osfQuickPaste $(LIBDIR)/XKeysymDB`" = "" ]; then \
		echo "**SAVING** XKeysymDB in XKeysymDB.old" ; \
		(set -x ; $(CP) $(LIBDIR)/XKeysymDB $(LIBDIR)/XKeysymDB.old ); \
		echo "**PREPENDING** XKeysymDB in $(LIBDIR)" ; \
		(set -x; $(RM)  $(LIBDIR)/XKeysymDB ); \
		echo "+ cat XKeysymDB $(LIBDIR)/XKeysymDB.old > $(LIBDIR)/XKeysymDB "; \
		cat XKeysymDB $(LIBDIR)/XKeysymDB.old > $(LIBDIR)/XKeysymDB ; \
	    else  \
		echo "**NOT** installing new XKeysymDB"; \
		echo "OSF KeysymDB already installed."; \
	   fi; \
	else \
		echo "**INSTALLING** XKeysymDB in $(LIBDIR)" ; \
		(set -x; $(INSTALL) -c $(INSTALLFLAGS) XKeysymDB $(LIBDIR));  fi

depend:: $(DEPEND)

$(DEPEND):
	@echo "checking $@ over in $(DEPENDSRC) first..."; \
	cd $(DEPENDSRC); $(MAKE); \
	echo "okay, continuing in $(CURRENT_DIR)"

depend::
	$(DEPEND) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)

###########################################################################
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS); fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then \
	echo "	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

###########################################################################
# dependencies generated by makedepend

