.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
.tm \\n%:\\$1:\\$2:\\$3
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de PN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XSetWMProperties 3X11 "Release 4" "X Version 11" 
.SH NAME
XSetWMProperties, XWMGeometry \- window manager convenience functions
.SH SYNTAX
void XSetWMProperties\^(\^\fIdisplay\fP, \fIw\fP, \fIwindow_name\fP, \
\fIicon_name\fP, \fIargv\fP, \fIargc\fP, \fInormal_hints\fP, \fIwm_hints\fP, \
\fIclass_hints\fP\^)
.br
      Display *\fIdisplay\fP\^; 
.br
      Window \fIw\fP\^;
.br
      XTextProperty *\fIwindow_name\fP\^;
.br
      XTextProperty *\fIicon_name\fP\^;
.br
      char **\fIargv\fP\^;
.br
      int \fIargc\fP\^;
.br
      XSize_hints *\fInormal_hints\fP\^;
.br
      XWMHints *\fIwm_hints\fP\^;
.br
      XClassHint *\fIclass_hints\fP\^;
.LP
int XWMGeometry\^(\^\fIdisplay\fP, \fIscreen\fP, \fIuser_geom\fP, \
\fIdef_geom\fP, \fIbwidth\fP, \fIhints\fP, \fIx_return\fP, \fIy_return\fP,
.br
                \fIwidth_return\fP, \fIheight_return\fP, \fIgravity_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      int \fIscreen\fP\^;
.br
      char *\fIuser_geom\fP\^;
.br
      char *\fIdef_geom\fP\^;
.br
      unsigned int \fIbwidth\fP\^;
.br
      XSizeHints *\fIhints\fP\^;
.br
      int *\fIx_return\fP, *\fIy_return\fP\^; 
.br
      int *\fIwidth_return\fP\^;
.br
      int *\fIheight_return\fP\^;
.br
      int *\fIgravity_return\fP\^;
.SH ARGUMENTS
.IP \fIargc\fP 1i
Specifies the number of arguments.
.IP \fIargv\fP 1i
Specifies the application's argument list.
.\" $Header: bwidth.a,v 1.1 88/02/26 10:05:23 mento Exp $
.IP \fIbwidth\fP 1i
Specifies the border width.
.IP \fIclass_hints\fP 1i
Specifies the
.PN XClassHint
structure to be used.
.IP \fIdef_geom\fP 1i
Specifies the application's default geometry or NULL.
.\" $Header: display.a,v 1.1 88/02/26 10:26:29 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIgravity_return\fP 1i
Returns the window gravity.
.IP \fIhints\fP 1i
Specifies the size hints for the window in its normal state.
.\" $Header: icon_name.a,v 1.2 88/05/17 11:22:33 mento Exp $
.IP \fIicon_name\fP 1i
Specifies the icon name,
which should be a null-terminated string.
.IP \fInormal_hints\fP 1i
Specifies the size hints for the window in its normal state.
.IP \fIscreen\fP 1i
Specifies the screen.
.IP \fIuser_geom\fP 1i
Specifies the user-specified geometry or NULL.
.\" $Header: xy_ret.a,v 1.3 88/05/20 05:05:44 mento Exp $
.IP \fIx_return\fP 1i
.br
.ns
.IP \fIy_return\fP 1i
Return the x and y offsets.
.\" $Header: widtheight2.a,v 1.1 88/02/26 10:32:28 mento Exp $
.IP \fIwidth_return\fP 1i
.br
.ns
.IP \fIheight_return\fP 1i
Return the width and height determined.
.\" $Header: w.a,v 1.2 88/05/07 11:35:31 mento Exp $
.IP \fIw\fP 1i
Specifies the window.
.\" $Header: window_name.a,v 1.2 88/05/18 05:22:36 mento Exp $
.IP \fIwindow_name\fP 1i
Specifies the window name,
which should be a null-terminated string.
.IP \fIwm_hints\fP 1i
Specifies the
.PN XWMHints
structure to be used.
.SH DESCRIPTION
The 
.PN XSetWMProperties 
convenience function provides a single programming interface 
for setting those essential window properties that are used 
for communicating with other clients (particularly window and session
managers).
.LP
If the window_name argument is non-null, 
.PN XSetWMProperties
calls
.PN XSetWMName ,
which, in turn, sets the WM_NAME property (see section 9.1.4).
If the icon_name argument is non-null,
.PN XSetWMProperties
calls
.PN XSetWMIconName ,
which sets the WM_ICON_NAME property (see section 9.1.5).
If the argv argument is non-null, 
.PN XSetWMProperties
calls
.PN XSetCommand ,
which sets the WM_COMMAND property (see section 9.2.1).
Note that an argc of 0 is allowed to indicate a zero-length command.
Note also that the hostname of this machine is stored using
.PN XSetWMClientMachine 
(see section 9.2.2).
.LP
If the normal_hints argument is non-null, 
.PN XSetWMProperties
calls
.PN XSetWMNormalHints ,
which sets the WM_NORMAL_HINTS property (see section 9.1.7).
If the wm_hints argument is non-null, 
.PN XSetWMProperties
calls
.PN XSetWMHints ,
which sets the WM_HINTS property (see section 9.1.6).
.LP
If the class_hints argument is non-null, 
.PN XSetWMProperties
calls
.PN XSetClassHint ,
which sets the WM_CLASS property (see section 9.1.8).
If the res_name member in the
.PN XClassHint
structure is set to the null pointer and the RESOURCE_NAME environment 
variable is set, 
then value of the environment variable is substituted for res_name.
If the res_name member is null, 
the environment variable is not set, 
and argv and argv[0] are set, 
then the value of argv[0], stripped of
any directory prefixes, is substituted for res_name.
.LP
.PN XSetWMProperties
can generate
.PN BadAlloc
and
.PN BadWindow
errors.
.LP
The 
.PN XWMGeometry 
function combines any geometry information (given in the format used by 
.PN XParseGeometry )
specified by the user and by the calling program with size hints 
(usually the ones to be stored in WM_NORMAL_HINTS) and returns the position, 
size, and gravity
.Pn ( NorthWestGravity , 
.PN NorthEastGravity , 
.PN SouthEastGravity
or
.PN SouthWestGravity ) 
that describe the window.
If the base size is not set in the 
.PN XSizeHints
structure, 
the minimum size is used if set.
Otherwise, a base size of 0 is assumed.
If no minimum size is set in the hints structure, 
the base size is used.
A mask (in the form returned by 
.PN XParseGeometry ) 
that describes which values came from the user specification 
and whether or not the position coordinates are relative
to the right and bottom edges is returned (which will have already been
accounted for in the x_return and y_return values).
.LP
Note that invalid geometry specifications can cause a width or height of 0 
to be returned.
The caller may pass the address of the hints win_gravity field 
as gravity_return to update the hints directly.
.SH PROPERTIES
.TP 1i
\s-1WM_CLASS\s+1
Set by application programs to allow window and session
managers to obtain the application's resources from the resource database.
.TP 1i
\s-1WM_CLIENT_MACHINE\s+1
The string name of the machine on which the client application is running.
.TP 1i
\s-1WM_COMMAND\s+1
The command and arguments, separated by ASCII nulls, used to invoke the
application.
.TP 1i
\s-1WM_HINTS\s+1
Additional hints set by client for use by the window manager.
The C type of this property is 
.PN XWMHints .
.TP 1i
\s-1WM_ICON_NAME\s+1
Name to be used in icon.
.TP 1i
\s-1WM_NAME\s+1
Name of the application.
.TP 1i
\s-1WM_NORMAL_HINTS\s+1
Size hints for a window in its normal state.
The C type of this property is
.PN XSizeHints .
.SH DIAGNOSTICS
.\" $Header: badalloc.e,v 1.3 87/09/11 11:17:14 mento Exp $
.TP 1i
.PN BadAlloc
The server failed to allocate the requested resource or server memory.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XAllocClassHint(3X11),
XAllocIconSize(3X11),
XAllocSizeHints(3X11),
XAllocWMHints(3X11),
XParseGeometry(3X11),
XSetCommand(3X11),
XSetTransientForHint(3X11),
XSetTextProperty(3X11),
XSetWMClientMachine(3X11),
XSetWMColormapWindows(3X11),
XSetWMIconName(3X11),
XSetWMName(3X11),
XSetWMProtocols(3X11),
XStringListToTextProperty(3X11)
.br
\fI\*(xL\fP
