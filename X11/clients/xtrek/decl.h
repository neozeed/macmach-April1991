/* Machine Generated: DO NOT EDIT */
extern void     makeClock();
extern void     destroyClock();
extern void     showTimeLeft();
extern int      getColorDefs();
extern int      booleanDefault();
extern int      arrayDefault();
extern void     coup();
extern void     orbit();
extern void     repair_damage();
extern void     damage_ship();
extern void     break_ship();
extern void     death();
extern void     dmessage();
extern void     warning();
extern void     itoa();
extern void     enter();
extern void     standardships();
extern void     initdefaultship();
extern void     getship();
extern aShip   *findship();
extern void     convertships();
extern void     fillhelp();
extern void     showMotd();
extern void     CreateHelpWindow();
extern void     drawIcon();
extern void     CreateIcon();
extern void     inform();
extern void     destroyInfo();
extern void     input();
extern void     initinput();
extern void     set_speed();
extern void     shield_up();
extern void     shield_down();
extern void     shield_tog();
extern void     follow_ship();
extern void     bomb_planet();
extern void     beam_up();
extern void     beam_down();
extern void     repair();
extern void     repair_off();
extern void     repeat_message();
extern int      cloak_on();
extern void     cloak_off();
extern void     planetlist();
extern void     playerlist();
extern void     scorelist();
extern void     CoolSystems();
extern void     add_fuel();
extern void     player_orbit();
extern void     space_move();
extern void     adjust_alert();
extern void     redrawEmpire();
extern void     redrawQuit();
extern void     mapAll();
extern void     entrywindow();
extern void     del_entrywindow();
extern char    *newwin();
extern FILE    *OpenLibraryFile();
extern void     XTrekParse();
extern struct planet *findplanet();
extern void     addplanet();
extern int      addempire();
extern int      findempire();
extern void     ConfigGlobals();
extern void     udphaser();
extern void     phaser();	/* initiate firing sequence. */
extern void     create_random_planets();
extern void     save_planets();
extern void     udplanets();
extern void     PlanetFight();
extern void     beam();
extern void     checkwin();
extern void     savestats();
extern void     map();
extern void     redraw();
extern void     intrupt();
extern int      getFonts();
extern void     getResources();
extern void     startrobot();
extern void     rmove();
extern void     CreateShipBitMaps();
extern void     InitPixMaps();
extern void     smessage();
extern void     pmessage();
extern void     statline();
extern void     updateStats();
extern void     initStats();
extern Window   openStats();
extern void     redrawStats();
extern void     closeStats();
extern void     subdaemon();
extern void     move();
extern void     robocount();
extern void     robostart();
extern void     udplayer();
extern void     empiretimers();
extern void     killmess();
extern void     dumpmessages();
extern void     teleport();
extern void     turbo();
extern void     ntorp();
extern int      nearest();
extern void     do_explosion();
extern void     udtorp_tubes();
extern void     detTorp();
extern void     detMine();
extern void     detothers();
extern void     udtorps();
extern int      angdist();
extern struct obtype *gettarget();
extern int      ismapped();
extern void     auto_features();
extern unsigned char newcourse();
extern int      numShips();
extern void     waraction();
extern void     sendwarn();
extern void     warwindow();
extern void     warrefresh();
