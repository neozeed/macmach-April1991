# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $

###########################################################################
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.77 89/12/18 17:01:37 jim Exp $

# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.

# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").

# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).

###########################################################################
# platform-specific configuration parameters - edit macmach.cf to change

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.21 89/12/06 11:46:50 jim Exp $

            SHELL = 	/bin/sh

              TOP = ../../../.
      CURRENT_DIR = ./server/ddx/mfb

               AR = ar cq
  BOOTSTRAPCFLAGS =
               CC = /bin/gcc -DNOSTDHDRS -fstrength-reduce

         COMPRESS = compress
              CPP = /lib/gcc-cpp -traditional $(STD_CPP_DEFINES)
    PREPROCESSCMD = /bin/gcc -DNOSTDHDRS -fstrength-reduce -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp
           RANLIB = ranlib
  RANLIBINSTFLAGS =
               RM = rm -f
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS = ctags

   SIGNAL_DEFINES = -DSIGNALRETURNSINT

    PROTO_DEFINES =

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

          DESTDIR =

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS =
      COMPATFLAGS =

      ALLINCLUDES = $(STD_INCLUDES) $(TOP_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES) $(COMPATFLAGS)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)
   LDCOMBINEFLAGS = -X -r

        MACROFILE = macmach.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules 			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def 			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

###########################################################################
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $

###########################################################################
# X Window System make variables; this need to be coordinated with rules
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $

          PATHSEP = /
        USRLIBDIR = $(DESTDIR)/usr/lib
           BINDIR = $(DESTDIR)/usr/bin/X11
          INCROOT = $(DESTDIR)/usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           AWMDIR = $(LIBDIR)/awm
           TWMDIR = $(LIBDIR)/twm
           GWMDIR = $(LIBDIR)/gwm
          MANPATH = $(DESTDIR)/usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)x
        LIBMANDIR = $(MANSOURCEPATH)3
      XAPPLOADDIR = $(LIBDIR)/app-defaults

       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
              RGB = $(RGBSRC)/rgb
            FONTC = $(BDFTOSNFSRC)/bdftosnf
        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
     EXTENSIONSRC = $(TOP)/extensions

  DEPEXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
     EXTENSIONLIB = 			  $(DEPEXTENSIONLIB)

          DEPXLIB = $(DEPEXTENSIONLIB) $(XLIBSRC)/libX11.a
             XLIB = $(EXTENSIONLIB) 			 $(XLIBSRC)/libX11.a

      DEPXAUTHLIB = $(XAUTHSRC)/libXau.a
         XAUTHLIB = 			 $(DEPXAUTHLIB)

        DEPXMULIB = $(XMUSRC)/libXmu.a
           XMULIB = 			 $(DEPXMULIB)

       DEPOLDXLIB = $(OLDXLIBSRC)/liboldX.a
          OLDXLIB = 			 $(DEPOLDXLIB)

      DEPXTOOLLIB = $(TOOLKITSRC)/libXt.a
         XTOOLLIB = 			 $(DEPXTOOLLIB)

        DEPXAWLIB = $(AWIDGETSRC)/libXaw.a
           XAWLIB = 			 $(DEPXAWLIB)

 LINTEXTENSIONLIB = $(EXTENSIONSRC)/lib/llib-lXext.ln
         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln

          DEPLIBS = $(LOCAL_LIBRARIES)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.67 89/12/18 17:14:15 jim Exp $

###########################################################################
# start of Imakefile

# $XConsortium: Server.tmpl,v 1.3 89/10/20 11:14:52 jim Exp $

         CC = /bin/gcc -DNOSTDHDRS -fstrength-reduce
  CCOPTIONS =
STD_DEFINES = -DXDMCP -DSHAPE -DMULTIBUFFER -DMITMISC
CDEBUGFLAGS = -O
EXT_DEFINES = -DSHAPE -DMULTIBUFFER -DMITMISC

SRCS1 =	 mfbgc.c mfbwindow.c mfbfont.c 	 mfbfillrct.c mfbpntwin.c maskbits.c mfbpixmap.c 	 mfbimage.c mfbline.c mfbbres.c mfbhrzvert.c mfbbresd.c 	 mfbpushpxl.c mfbzerarc.c mfbfillarc.c          mfbfillsp.c mfbsetsp.c mfbscrinit.c mfbscrclse.c mfbclip.c          mfbbitblt.c mfbgetsp.c mfbpolypnt.c 	 mfbcmap.c mfbtile.c mfbmisc.c mfbbstore.c

SRCS =	 $(SRCS1) mfbplygblt.c mfbimggblt.c mfbpntarea.c mfbtegblt.c

OBJS =   mfbgc.o mfbwindow.o mfbfont.o 	 mfbfillrct.o mfbpntwin.o maskbits.o mfbpixmap.o 	 mfbimage.o mfbline.o mfbbres.o mfbhrzvert.o mfbbresd.o mfbseg.o 	 mfbpushpxl.o mfbzerarc.o mfbfillarc.o 	 mfbfillsp.o mfbsetsp.o mfbscrinit.o mfbscrclse.o mfbclip.o          mfbbitblt.o mfbgetsp.o mfbpolypnt.o 	 mfbpgbwht.o mfbpgbblak.o mfbpgbinv.o 	 mfbigbwht.o mfbigbblak.o mfbcmap.o 	 mfbpawhite.o mfbpablack.o mfbpainv.o mfbtile.o          mfbtewhite.o mfbteblack.o mfbmisc.o mfbbstore.o

INCLUDES = -I. -I../mi -I../../include -I$(INCLUDESRC)
LINTDEFS = -DMFBPOLYGLYPHBLT=mfbPolyGlyphBltWhite 	   -DMFBIMAGEGLYPHBLT=mfbImageGlyphBltWhite 	   -DEQWHOLEWORD=\=~0 -DOPEQ=\|=

LINTLIBS = ../../dix/llib-ldix.ln ../../os/4.2bsd/llib-los.ln ../mi/llib-lmi.ln

.c.o:
	$(RM) $@
	$(CC) -c $(CFLAGS) $*.c

all:: libmfb.a

libmfb.a: $(OBJS)
	$(RM) $@
	$(AR) $@ $(OBJS)
	$(RANLIB) $@

lintlib:: llib-lmfb.ln

llib-lmfb.ln: $(SRCS1)
	$(RM) $@
	$(LINT) $(LINTLIBFLAG)mfb $(LINTFLAGS) $(SRCS1)

lint:
	$(LINT) $(LINTFLAGS) $(LINTDEFS) $(SRCS1) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

depend:: $(DEPEND)

$(DEPEND):
	@echo "checking $@ over in $(DEPENDSRC) first..."; \
	cd $(DEPENDSRC); $(MAKE); \
	echo "okay, continuing in $(CURRENT_DIR)"

depend::
	$(DEPEND) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)

mfbseg.o: mfbseg.c mfbline.o
	$(CC) -DPOLYSEGMENT $(CFLAGS) -c mfbseg.c

mfbseg.c:
	$(LN) mfbline.c mfbseg.c

mfbpntarea.o mfbimggblt.o mfbplygblt.o mfbtegblt.o:
	$(RM) $@; touch $@

mfbpgbwht.o: mfbplygblt.c mfbplygblt.o
	$(RM) $@ mfbpgbwht.c
	$(LN) mfbplygblt.c mfbpgbwht.c
	${CC} -DMFBPOLYGLYPHBLT=mfbPolyGlyphBltWhite 	   -DOPEQ=\|=  $(CFLAGS) -c mfbpgbwht.c

	$(RM) mfbpgbwht.c

mfbpgbblak.o: mfbplygblt.c mfbplygblt.o
	$(RM) $@ mfbpgbblak.c
	$(LN) mfbplygblt.c mfbpgbblak.c
	${CC} -DMFBPOLYGLYPHBLT=mfbPolyGlyphBltBlack 	   -DOPEQ=\&=~ $(CFLAGS) -c mfbpgbblak.c

	$(RM) mfbpgbblak.c

mfbpgbinv.o: mfbplygblt.c mfbplygblt.o
	$(RM) $@ mfbpgbinv.c
	$(LN) mfbplygblt.c mfbpgbinv.c
	${CC} -DMFBPOLYGLYPHBLT=mfbPolyGlyphBltInvert 	   -DOPEQ=\^=  $(CFLAGS) -c mfbpgbinv.c

	$(RM) mfbpgbinv.c

mfbigbwht.o: mfbimggblt.c mfbimggblt.o
	$(RM) $@ mfbigbwht.c
	$(LN) mfbimggblt.c mfbigbwht.c
	${CC} -DMFBIMAGEGLYPHBLT=mfbImageGlyphBltWhite 	   -DOPEQ=\|=  $(CFLAGS) -c mfbigbwht.c

	$(RM) mfbigbwht.c

mfbigbblak.o: mfbimggblt.c mfbimggblt.o
	$(RM) $@ mfbigbblak.c
	$(LN) mfbimggblt.c mfbigbblak.c
	${CC} -DMFBIMAGEGLYPHBLT=mfbImageGlyphBltBlack 	   -DOPEQ=\&=~ $(CFLAGS) -c mfbigbblak.c

	$(RM) mfbigbblak.c

mfbpawhite.o: mfbpntarea.c mfbpntarea.o
	$(RM) $@ mfbpawhite.c
	$(LN) mfbpntarea.c mfbpawhite.c
	${CC} -DMFBSOLIDFILLAREA=mfbSolidWhiteArea 	   -DMFBSTIPPLEFILLAREA=mfbStippleWhiteArea 	   -DOPEQ=\|=  -DEQWHOLEWORD=\=~0 	   $(CFLAGS) -c mfbpawhite.c

	$(RM) mfbpawhite.c

mfbpablack.o: mfbpntarea.c mfbpntarea.o
	$(RM) $@ mfbpablack.c
	$(LN) mfbpntarea.c mfbpablack.c
	${CC} -DMFBSOLIDFILLAREA=mfbSolidBlackArea 	   -DMFBSTIPPLEFILLAREA=mfbStippleBlackArea 	   -DOPEQ=\&=~ -DEQWHOLEWORD=\=0 	   $(CFLAGS) -c mfbpablack.c

	$(RM) mfbpablack.c

mfbpainv.o: mfbpntarea.c mfbpntarea.o
	$(RM) $@ mfbpainv.c
	$(LN) mfbpntarea.c mfbpainv.c
	${CC} -DMFBSOLIDFILLAREA=mfbSolidInvertArea 	   -DMFBSTIPPLEFILLAREA=mfbStippleInvertArea 	   -DOPEQ=\^=  -DEQWHOLEWORD=\^=~0 	   $(CFLAGS) -c mfbpainv.c

	$(RM) mfbpainv.c

mfbtewhite.o: mfbtegblt.c mfbtegblt.o
	$(RM) $@ mfbtewhite.c
	$(LN) mfbtegblt.c mfbtewhite.c
	${CC} -DMFBTEGLYPHBLT=mfbTEGlyphBltWhite 	   -DOP= -DCLIPTETEXT=mfbImageGlyphBltWhite $(CFLAGS) -c mfbtewhite.c

	$(RM) mfbtewhite.c

mfbteblack.o: mfbtegblt.c mfbtegblt.o
	$(RM) $@ mfbteblack.c
	$(LN) mfbtegblt.c mfbteblack.c
	${CC} -DMFBTEGLYPHBLT=mfbTEGlyphBltBlack 	   -DOP=~ -DCLIPTETEXT=mfbImageGlyphBltBlack $(CFLAGS) -c mfbteblack.c

	$(RM) mfbteblack.c

source_links:
	$(RM) mfbpgbwht.c
	$(LN) mfbplygblt.c mfbpgbwht.c
	$(RM) mfbpgbblak.c
	$(LN) mfbplygblt.c mfbpgbblak.c
	$(RM) mfbpgbinv.c
	$(LN) mfbplygblt.c mfbpgbinv.c
	$(RM) mfbigbwht.c
	$(LN) mfbimggblt.c mfbigbwht.c
	$(RM) mfbigbblak.c
	$(LN) mfbimggblt.c mfbigbblak.c
	$(RM) mfbpawhite.c
	$(LN) mfbpntarea.c mfbpawhite.c
	$(RM) mfbpablack.c
	$(LN) mfbpntarea.c mfbpablack.c
	$(RM) mfbpainv.c
	$(LN) mfbpntarea.c mfbpainv.c
	$(RM) mfbtewhite.c
	$(LN) mfbtegblt.c mfbtewhite.c
	$(RM) mfbteblack.c
	$(LN) mfbtegblt.c mfbteblack.c

clean::
	$(RM) mfbpgbwht.c
	$(RM) mfbpgbblak.c
	$(RM) mfbpgbinv.c
	$(RM) mfbigbwht.c
	$(RM) mfbigbblak.c
	$(RM) mfbpawhite.c
	$(RM) mfbpablack.c
	$(RM) mfbpainv.c
	$(RM) mfbseg.c
	$(RM) mfbtewhite.c
	$(RM) mfbteblack.c

###########################################################################
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS); fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then \
	echo "	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

###########################################################################
# dependencies generated by makedepend

