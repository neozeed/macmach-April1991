# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $

###########################################################################
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.77 89/12/18 17:01:37 jim Exp $

# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.

# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").

# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).

###########################################################################
# platform-specific configuration parameters - edit macmach.cf to change

###########################################################################
# site-specific configuration parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.21 89/12/06 11:46:50 jim Exp $

            SHELL = 	/bin/sh

              TOP = ../../../.
      CURRENT_DIR = ./fonts/bdf/misc

               AR = ar cq
  BOOTSTRAPCFLAGS =
               CC = /bin/gcc -DNOSTDHDRS -fstrength-reduce

         COMPRESS = compress
              CPP = /lib/gcc-cpp -traditional $(STD_CPP_DEFINES)
    PREPROCESSCMD = /bin/gcc -DNOSTDHDRS -fstrength-reduce -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp
           RANLIB = ranlib
  RANLIBINSTFLAGS =
               RM = rm -f
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS = ctags

   SIGNAL_DEFINES = -DSIGNALRETURNSINT

    PROTO_DEFINES =

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

          DESTDIR =

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS =
      COMPATFLAGS =

      ALLINCLUDES = $(STD_INCLUDES) $(TOP_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES) $(COMPATFLAGS)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)
   LDCOMBINEFLAGS = -X -r

        MACROFILE = macmach.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules 			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def 			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

###########################################################################
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $

###########################################################################
# X Window System make variables; this need to be coordinated with rules
# $XConsortium: Project.tmpl,v 1.63 89/12/18 16:46:44 jim Exp $

          PATHSEP = /
        USRLIBDIR = $(DESTDIR)/usr/lib
           BINDIR = $(DESTDIR)/usr/bin/X11
          INCROOT = $(DESTDIR)/usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           AWMDIR = $(LIBDIR)/awm
           TWMDIR = $(LIBDIR)/twm
           GWMDIR = $(LIBDIR)/gwm
          MANPATH = $(DESTDIR)/usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)x
        LIBMANDIR = $(MANSOURCEPATH)3
      XAPPLOADDIR = $(LIBDIR)/app-defaults

       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
              RGB = $(RGBSRC)/rgb
            FONTC = $(BDFTOSNFSRC)/bdftosnf
        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
     MKFONTDIRSRC = $(FONTSRC)/mkfontdir
     EXTENSIONSRC = $(TOP)/extensions

  DEPEXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
     EXTENSIONLIB = 			  $(DEPEXTENSIONLIB)

          DEPXLIB = $(DEPEXTENSIONLIB) $(XLIBSRC)/libX11.a
             XLIB = $(EXTENSIONLIB) 			 $(XLIBSRC)/libX11.a

      DEPXAUTHLIB = $(XAUTHSRC)/libXau.a
         XAUTHLIB = 			 $(DEPXAUTHLIB)

        DEPXMULIB = $(XMUSRC)/libXmu.a
           XMULIB = 			 $(DEPXMULIB)

       DEPOLDXLIB = $(OLDXLIBSRC)/liboldX.a
          OLDXLIB = 			 $(DEPOLDXLIB)

      DEPXTOOLLIB = $(TOOLKITSRC)/libXt.a
         XTOOLLIB = 			 $(DEPXTOOLLIB)

        DEPXAWLIB = $(AWIDGETSRC)/libXaw.a
           XAWLIB = 			 $(DEPXAWLIB)

 LINTEXTENSIONLIB = $(EXTENSIONSRC)/lib/llib-lXext.ln
         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln

          DEPLIBS = $(LOCAL_LIBRARIES)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.67 89/12/18 17:14:15 jim Exp $

###########################################################################
# start of Imakefile

SRCS = 5x8.bdf 6x9.bdf 6x10.bdf 6x12.bdf 6x13.bdf 6x13B.bdf 	7x13.bdf 7x13B.bdf 8x13.bdf 8x13B.bdf 9x15.bdf 9x15B.bdf 	10x20.bdf cursor.bdf deccurs.bdf decsess.bdf 	olcursor.bdf olgl10.bdf olgl12.bdf olgl14.bdf olgl19.bdf nil2.bdf 	clB6x10.bdf clB6x12.bdf clB8x10.bdf clB8x12.bdf clB8x13.bdf 	clB8x14.bdf clB8x16.bdf clB8x8.bdf clB9x15.bdf clI6x12.bdf clI8x8.bdf 	clR4x6.bdf clR5x10.bdf clR5x6.bdf clR5x8.bdf clR6x10.bdf clR6x12.bdf 	clR6x13.bdf clR6x6.bdf clR6x8.bdf clR7x10.bdf clR7x12.bdf clR7x14.bdf 	clR7x8.bdf clR8x10.bdf clR8x12.bdf clR8x13.bdf clR8x14.bdf 	clR8x16.bdf clR8x8.bdf clR9x15.bdf k14.bdf 7x14.bdf 7x14rk.bdf 	12x24.bdf 12x24rk.bdf 8x16.bdf 8x16rk.bdf

OBJS = 5x8.snf 6x9.snf 6x10.snf 6x12.snf 6x13.snf 6x13B.snf 	7x13.snf 7x13B.snf 8x13.snf 8x13B.snf 9x15.snf 9x15B.snf 	10x20.snf cursor.snf deccurs.snf decsess.snf 	olcursor.snf olgl10.snf olgl12.snf olgl14.snf olgl19.snf nil2.snf 	clB6x10.snf clB6x12.snf clB8x10.snf clB8x12.snf clB8x13.snf 	clB8x14.snf clB8x16.snf clB8x8.snf clB9x15.snf clI6x12.snf clI8x8.snf 	clR4x6.snf clR5x10.snf clR5x6.snf clR5x8.snf clR6x10.snf clR6x12.snf 	clR6x13.snf clR6x6.snf clR6x8.snf clR7x10.snf clR7x12.snf clR7x14.snf 	clR7x8.snf clR8x10.snf clR8x12.snf clR8x13.snf clR8x14.snf 	clR8x16.snf clR8x8.snf clR9x15.snf k14.snf 7x14.snf 7x14rk.snf 	12x24.snf 12x24rk.snf 8x16.snf 8x16rk.snf

FONTINSTDIR = $(FONTDIR)/misc

all::  $(OBJS) fonts.dir

fonts.dir:  $(OBJS)
	$(MKFONTDIR) .

clean::
	$(RM) *.snf fonts.dir

5x8.snf:  5x8.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

6x9.snf:  6x9.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

6x10.snf:  6x10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

6x12.snf:  6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

6x13.snf:  6x13.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

6x13B.snf:  6x13B.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

7x13.snf:  7x13.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

7x13B.snf:  7x13B.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

8x13.snf:  8x13.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

8x13B.snf:  8x13B.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

9x15.snf:  9x15.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

9x15B.snf:  9x15B.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

10x20.snf:  10x20.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

cursor.snf:  cursor.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

deccurs.snf:  deccurs.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

decsess.snf:  decsess.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

olcursor.snf:  olcursor.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

olgl10.snf:  olgl10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

olgl12.snf:  olgl12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

olgl14.snf:  olgl14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

olgl19.snf:  olgl19.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

nil2.snf:  nil2.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB6x10.snf:  clB6x10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB6x12.snf:  clB6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB8x10.snf:  clB8x10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB8x12.snf:  clB8x12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB8x13.snf:  clB8x13.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB8x14.snf:  clB8x14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB8x16.snf:  clB8x16.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB8x8.snf:  clB8x8.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clB9x15.snf:  clB9x15.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clI6x12.snf:  clI6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clI8x8.snf:  clI8x8.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR4x6.snf:  clR4x6.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR5x10.snf:  clR5x10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR5x6.snf:  clR5x6.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR5x8.snf:  clR5x8.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR6x10.snf:  clR6x10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR6x12.snf:  clR6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR6x13.snf:  clR6x13.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR6x6.snf:  clR6x6.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR6x8.snf:  clR6x8.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR7x10.snf:  clR7x10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR7x12.snf:  clR7x12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR7x14.snf:  clR7x14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR7x8.snf:  clR7x8.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR8x10.snf:  clR8x10.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR8x12.snf:  clR8x12.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR8x13.snf:  clR8x13.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR8x14.snf:  clR8x14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR8x16.snf:  clR8x16.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR8x8.snf:  clR8x8.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

clR9x15.snf:  clR9x15.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

k14.snf:  k14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

7x14.snf:  7x14.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

7x14rk.snf:  7x14rk.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

12x24.snf:  12x24.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

12x24rk.snf:  12x24rk.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

8x16.snf:  8x16.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

8x16rk.snf:  8x16rk.bdf
	$(FONTC) $(FONTCFLAGS) $? >$@

install:: $(OBJS)
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(OBJS); do \
	(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i $(FONTINSTDIR)); \
	done

install::  fonts.dir
	$(INSTALL) -c $(INSTDATFLAGS) fonts.dir $(FONTINSTDIR)

install::  fonts.alias
	$(INSTALL) -c $(INSTDATFLAGS) fonts.alias $(FONTINSTDIR)

depend::

###########################################################################
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS); fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then \
	echo "	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

###########################################################################
# dependencies generated by makedepend

